
opdracht 3.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000922  000009b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000922  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080010a  0080010a  000009c0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f46  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa9  00000000  00000000  00001a4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006e8  00000000  00000000  000024f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  00002be0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000055e  00000000  00000000  00002dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004dd  00000000  00000000  0000331e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000037fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	dd c0       	rjmp	.+442    	; 0x1e4 <__vector_10>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e2       	ldi	r30, 0x22	; 34
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 30       	cpi	r26, 0x0C	; 12
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	29 d1       	rcall	.+594    	; 0x316 <main>
  c4:	2c c4       	rjmp	.+2136   	; 0x91e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <sbi_porta>:
void cbi_portc(int index){
	PORTC &= ~(1<<index);
}

void sbi_porta(int index){
	PORTA |= (1<<index);
  c8:	9b b3       	in	r25, 0x1b	; 27
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <sbi_porta+0xc>
  d0:	22 0f       	add	r18, r18
  d2:	33 1f       	adc	r19, r19
  d4:	8a 95       	dec	r24
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <sbi_porta+0x8>
  d8:	29 2b       	or	r18, r25
  da:	2b bb       	out	0x1b, r18	; 27
  dc:	08 95       	ret

000000de <cbi_porta>:
}


void cbi_porta(int index){
	PORTA &= ~(1<<index);
  de:	9b b3       	in	r25, 0x1b	; 27
  e0:	21 e0       	ldi	r18, 0x01	; 1
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <cbi_porta+0xc>
  e6:	22 0f       	add	r18, r18
  e8:	33 1f       	adc	r19, r19
  ea:	8a 95       	dec	r24
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <cbi_porta+0x8>
  ee:	20 95       	com	r18
  f0:	29 23       	and	r18, r25
  f2:	2b bb       	out	0x1b, r18	; 27
  f4:	08 95       	ret

000000f6 <lcd_strobe_lcd_e>:
	lcd_write_command (0x80);						//Cursor terug naar start
}

void lcd_strobe_lcd_e(void) {
	
	sbi_porta(LCD_E);	// E high
  f6:	86 e0       	ldi	r24, 0x06	; 6
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	e6 df       	rcall	.-52     	; 0xc8 <sbi_porta>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fc:	83 ec       	ldi	r24, 0xC3	; 195
  fe:	99 e0       	ldi	r25, 0x09	; 9
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <lcd_strobe_lcd_e+0xa>
 104:	00 c0       	rjmp	.+0      	; 0x106 <lcd_strobe_lcd_e+0x10>
 106:	00 00       	nop
	_delay_ms(1);
	cbi_porta(LCD_E);  	// E low
 108:	86 e0       	ldi	r24, 0x06	; 6
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	e8 df       	rcall	.-48     	; 0xde <cbi_porta>
 10e:	83 ec       	ldi	r24, 0xC3	; 195
 110:	99 e0       	ldi	r25, 0x09	; 9
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <lcd_strobe_lcd_e+0x1c>
 116:	00 c0       	rjmp	.+0      	; 0x118 <lcd_strobe_lcd_e+0x22>
 118:	00 00       	nop
 11a:	08 95       	ret

0000011c <lcd_write_character>:
	// return home
	lcd_write_command(0x02);
	lcd_strobe_lcd_e();
}

void lcd_write_character(unsigned char byte){
 11c:	cf 93       	push	r28
 11e:	c8 2f       	mov	r28, r24
	
	
	//upper nibble
	PORTC = byte;
 120:	85 bb       	out	0x15, r24	; 21
	sbi_porta(LCD_RS);
 122:	84 e0       	ldi	r24, 0x04	; 4
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	d0 df       	rcall	.-96     	; 0xc8 <sbi_porta>
	lcd_strobe_lcd_e();
 128:	e6 df       	rcall	.-52     	; 0xf6 <lcd_strobe_lcd_e>
 12a:	c2 95       	swap	r28
	
	//lower nibble
	PORTC = (byte<<4);
 12c:	c0 7f       	andi	r28, 0xF0	; 240
 12e:	c5 bb       	out	0x15, r28	; 21
 130:	84 e0       	ldi	r24, 0x04	; 4
	sbi_porta(LCD_RS);
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	c9 df       	rcall	.-110    	; 0xc8 <sbi_porta>
	lcd_strobe_lcd_e();
 136:	df df       	rcall	.-66     	; 0xf6 <lcd_strobe_lcd_e>
 138:	cf 91       	pop	r28
	
}
 13a:	08 95       	ret

0000013c <lcd_write_command>:
 13c:	cf 93       	push	r28

void lcd_write_command(unsigned char byte){
 13e:	c8 2f       	mov	r28, r24
	
	//upper nibble
	PORTC = byte;
 140:	85 bb       	out	0x15, r24	; 21
	cbi_porta(LCD_RS);
 142:	84 e0       	ldi	r24, 0x04	; 4
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	cb df       	rcall	.-106    	; 0xde <cbi_porta>
	lcd_strobe_lcd_e();
 148:	d6 df       	rcall	.-84     	; 0xf6 <lcd_strobe_lcd_e>
 14a:	c2 95       	swap	r28
	
	//lower nibble
	PORTC = (byte<<4);
 14c:	c0 7f       	andi	r28, 0xF0	; 240
 14e:	c5 bb       	out	0x15, r28	; 21
 150:	84 e0       	ldi	r24, 0x04	; 4
	cbi_porta(LCD_RS);
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	c4 df       	rcall	.-120    	; 0xde <cbi_porta>
	lcd_strobe_lcd_e();
 156:	cf df       	rcall	.-98     	; 0xf6 <lcd_strobe_lcd_e>
 158:	cf 91       	pop	r28

}
 15a:	08 95       	ret

0000015c <lcd_clear>:
 15c:	81 e0       	ldi	r24, 0x01	; 1
#include "lcd_control.h"

void _delay_ms(double __ms);

void lcd_clear() {
	lcd_write_command (0x01);						//Leeg display
 15e:	ee df       	rcall	.-36     	; 0x13c <lcd_write_command>
 160:	87 e8       	ldi	r24, 0x87	; 135
 162:	93 e1       	ldi	r25, 0x13	; 19
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <lcd_clear+0x8>
 168:	00 c0       	rjmp	.+0      	; 0x16a <lcd_clear+0xe>
 16a:	00 00       	nop
	_delay_ms(2);
	lcd_write_command (0x80);						//Cursor terug naar start
 16c:	80 e8       	ldi	r24, 0x80	; 128
 16e:	e6 cf       	rjmp	.-52     	; 0x13c <lcd_write_command>
 170:	08 95       	ret

00000172 <init_4bits_mode>:

void cbi_porta(int index){
	PORTA &= ~(1<<index);
}

void init_4bits_mode(void) {
 172:	cf 93       	push	r28
	
	// PORTC output mode and all low (also E and RS pin)
	
	// Init I/O
	DDRC = 0xFF;			// PORTD(7) output, PORTD(6:0) input
 174:	8f ef       	ldi	r24, 0xFF	; 255
 176:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xFF;
 178:	85 bb       	out	0x15, r24	; 21
	
	DDRA = 0xFF;
 17a:	8a bb       	out	0x1a, r24	; 26
	PORTC = 0x00;
 17c:	15 ba       	out	0x15, r1	; 21
	PORTA = 0x00;
 17e:	1b ba       	out	0x1b, r1	; 27
	
	PORTC = 0x20;	// function for 4-bit 1 row
 180:	c0 e2       	ldi	r28, 0x20	; 32
 182:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
 184:	b8 df       	rcall	.-144    	; 0xf6 <lcd_strobe_lcd_e>

	PORTC = 0x20;   // function high nibble 4-bit 2 row
	lcd_strobe_lcd_e();
 186:	c5 bb       	out	0x15, r28	; 21
 188:	b6 df       	rcall	.-148    	; 0xf6 <lcd_strobe_lcd_e>
	PORTC = 0x80;	// function low nibble 4-bit 2 row
 18a:	80 e8       	ldi	r24, 0x80	; 128
	lcd_strobe_lcd_e();
 18c:	85 bb       	out	0x15, r24	; 21

	PORTC = 0x00;   // function high nibble turn on visible blinking-block cursor
 18e:	b3 df       	rcall	.-154    	; 0xf6 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 190:	15 ba       	out	0x15, r1	; 21
	PORTC = 0xF0;   // function low nibble turn on visible blinking-block cursor
 192:	b1 df       	rcall	.-158    	; 0xf6 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 194:	80 ef       	ldi	r24, 0xF0	; 240

	PORTC = 0x00;   // Entry mode set high nibble
 196:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 198:	ae df       	rcall	.-164    	; 0xf6 <lcd_strobe_lcd_e>
	PORTC = 0x60;	// Entry mode set low nibble
 19a:	15 ba       	out	0x15, r1	; 21
 19c:	ac df       	rcall	.-168    	; 0xf6 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 19e:	80 e6       	ldi	r24, 0x60	; 96
 1a0:	85 bb       	out	0x15, r24	; 21
	
	// return home
	lcd_write_command(0x02);
 1a2:	a9 df       	rcall	.-174    	; 0xf6 <lcd_strobe_lcd_e>
 1a4:	82 e0       	ldi	r24, 0x02	; 2
 1a6:	ca df       	rcall	.-108    	; 0x13c <lcd_write_command>
	lcd_strobe_lcd_e();
 1a8:	a6 df       	rcall	.-180    	; 0xf6 <lcd_strobe_lcd_e>
 1aa:	cf 91       	pop	r28
}
 1ac:	08 95       	ret

000001ae <lcd_write_string>:
 1ae:	cf 93       	push	r28
	cbi_porta(LCD_RS);
	lcd_strobe_lcd_e();

}

void lcd_write_string(const char *str) {
 1b0:	df 93       	push	r29
 1b2:	ec 01       	movw	r28, r24
	
	for(;*str; str++){
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <lcd_write_string+0xc>
		lcd_write_character(*str);
 1b6:	b2 df       	rcall	.-156    	; 0x11c <lcd_write_character>

}

void lcd_write_string(const char *str) {
	
	for(;*str; str++){
 1b8:	21 96       	adiw	r28, 0x01	; 1
 1ba:	88 81       	ld	r24, Y
 1bc:	81 11       	cpse	r24, r1
 1be:	fb cf       	rjmp	.-10     	; 0x1b6 <lcd_write_string+0x8>
		lcd_write_character(*str);
	}
}
 1c0:	df 91       	pop	r29
 1c2:	cf 91       	pop	r28
 1c4:	08 95       	ret

000001c6 <wait>:
	for (i = n-1; i >= 0; --i, number /= 10)
	{
		numberArray[i] = (number % 10) + '0';
	}
	return numberArray;
}
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	08 c0       	rjmp	.+16     	; 0x1dc <wait+0x16>
 1cc:	ef ec       	ldi	r30, 0xCF	; 207
 1ce:	f7 e0       	ldi	r31, 0x07	; 7
 1d0:	31 97       	sbiw	r30, 0x01	; 1
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <wait+0xa>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <wait+0x10>
 1d6:	00 00       	nop
 1d8:	2f 5f       	subi	r18, 0xFF	; 255
 1da:	3f 4f       	sbci	r19, 0xFF	; 255
 1dc:	28 17       	cp	r18, r24
 1de:	39 07       	cpc	r19, r25
 1e0:	ac f3       	brlt	.-22     	; 0x1cc <wait+0x6>
 1e2:	08 95       	ret

000001e4 <__vector_10>:

int TimerPreset = -1;  // 0xF6, 10 till overflow
int number = 0;

// Interrupt routine timer2 overflow
ISR( TIMER2_OVF_vect ) {
 1e4:	1f 92       	push	r1
 1e6:	0f 92       	push	r0
 1e8:	0f b6       	in	r0, 0x3f	; 63
 1ea:	0f 92       	push	r0
 1ec:	11 24       	eor	r1, r1
 1ee:	0b b6       	in	r0, 0x3b	; 59
 1f0:	0f 92       	push	r0
 1f2:	cf 92       	push	r12
 1f4:	df 92       	push	r13
 1f6:	ef 92       	push	r14
 1f8:	ff 92       	push	r15
 1fa:	0f 93       	push	r16
 1fc:	1f 93       	push	r17
 1fe:	2f 93       	push	r18
 200:	3f 93       	push	r19
 202:	4f 93       	push	r20
 204:	5f 93       	push	r21
 206:	6f 93       	push	r22
 208:	7f 93       	push	r23
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
 20e:	af 93       	push	r26
 210:	bf 93       	push	r27
 212:	ef 93       	push	r30
 214:	ff 93       	push	r31
 216:	cf 93       	push	r28
 218:	df 93       	push	r29
 21a:	cd b7       	in	r28, 0x3d	; 61
 21c:	de b7       	in	r29, 0x3e	; 62
	
	int length = snprintf(NULL, 0, "%d", number + 1);
	char str[length + 1];
	snprintf(str, length + 1, "%d", number + 1);
	lcd_write_string(str);
}
 21e:	cd b6       	in	r12, 0x3d	; 61
 220:	de b6       	in	r13, 0x3e	; 62
int TimerPreset = -1;  // 0xF6, 10 till overflow
int number = 0;

// Interrupt routine timer2 overflow
ISR( TIMER2_OVF_vect ) {
	TCNT2 = TimerPreset;	// Preset value
 222:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 226:	84 bd       	out	0x24, r24	; 36
	number++;		// Increment counter
 228:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 22c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 230:	01 96       	adiw	r24, 0x01	; 1
 232:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 236:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
	lcd_clear();
 23a:	90 df       	rcall	.-224    	; 0x15c <lcd_clear>
	
	int length = snprintf(NULL, 0, "%d", number + 1);
 23c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 240:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 244:	01 96       	adiw	r24, 0x01	; 1
 246:	9f 93       	push	r25
 248:	8f 93       	push	r24
 24a:	0f 2e       	mov	r0, r31
 24c:	f2 e0       	ldi	r31, 0x02	; 2
 24e:	ef 2e       	mov	r14, r31
 250:	f1 e0       	ldi	r31, 0x01	; 1
 252:	ff 2e       	mov	r15, r31
 254:	f0 2d       	mov	r31, r0
 256:	ff 92       	push	r15
 258:	ef 92       	push	r14
 25a:	1f 92       	push	r1
 25c:	1f 92       	push	r1
 25e:	1f 92       	push	r1
 260:	1f 92       	push	r1
 262:	74 d0       	rcall	.+232    	; 0x34c <snprintf>
	char str[length + 1];
 264:	01 96       	adiw	r24, 0x01	; 1
 266:	2d b7       	in	r18, 0x3d	; 61
 268:	3e b7       	in	r19, 0x3e	; 62
 26a:	28 5f       	subi	r18, 0xF8	; 248
 26c:	3f 4f       	sbci	r19, 0xFF	; 255
 26e:	0f b6       	in	r0, 0x3f	; 63
 270:	f8 94       	cli
 272:	3e bf       	out	0x3e, r19	; 62
 274:	0f be       	out	0x3f, r0	; 63
 276:	2d bf       	out	0x3d, r18	; 61
 278:	28 1b       	sub	r18, r24
 27a:	39 0b       	sbc	r19, r25
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	f8 94       	cli
 280:	3e bf       	out	0x3e, r19	; 62
 282:	0f be       	out	0x3f, r0	; 63
 284:	2d bf       	out	0x3d, r18	; 61
 286:	0d b7       	in	r16, 0x3d	; 61
 288:	1e b7       	in	r17, 0x3e	; 62
 28a:	0f 5f       	subi	r16, 0xFF	; 255
 28c:	1f 4f       	sbci	r17, 0xFF	; 255
	snprintf(str, length + 1, "%d", number + 1);
 28e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
 292:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
 296:	2f 5f       	subi	r18, 0xFF	; 255
 298:	3f 4f       	sbci	r19, 0xFF	; 255
 29a:	3f 93       	push	r19
 29c:	2f 93       	push	r18
 29e:	ff 92       	push	r15
 2a0:	ef 92       	push	r14
 2a2:	9f 93       	push	r25
 2a4:	8f 93       	push	r24
 2a6:	1f 93       	push	r17
 2a8:	0f 93       	push	r16
 2aa:	50 d0       	rcall	.+160    	; 0x34c <snprintf>
	lcd_write_string(str);
 2ac:	80 2f       	mov	r24, r16
 2ae:	91 2f       	mov	r25, r17
 2b0:	7e df       	rcall	.-260    	; 0x1ae <lcd_write_string>
 2b2:	8d b7       	in	r24, 0x3d	; 61
}
 2b4:	9e b7       	in	r25, 0x3e	; 62
 2b6:	08 96       	adiw	r24, 0x08	; 8
 2b8:	0f b6       	in	r0, 0x3f	; 63
 2ba:	f8 94       	cli
 2bc:	9e bf       	out	0x3e, r25	; 62
 2be:	0f be       	out	0x3f, r0	; 63
 2c0:	8d bf       	out	0x3d, r24	; 61
 2c2:	0f b6       	in	r0, 0x3f	; 63
 2c4:	f8 94       	cli
 2c6:	de be       	out	0x3e, r13	; 62
 2c8:	0f be       	out	0x3f, r0	; 63
 2ca:	cd be       	out	0x3d, r12	; 61
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	ff 91       	pop	r31
 2d2:	ef 91       	pop	r30
 2d4:	bf 91       	pop	r27
 2d6:	af 91       	pop	r26
 2d8:	9f 91       	pop	r25
 2da:	8f 91       	pop	r24
 2dc:	7f 91       	pop	r23
 2de:	6f 91       	pop	r22
 2e0:	5f 91       	pop	r21
 2e2:	4f 91       	pop	r20
 2e4:	3f 91       	pop	r19
 2e6:	2f 91       	pop	r18
 2e8:	1f 91       	pop	r17
 2ea:	0f 91       	pop	r16
 2ec:	ff 90       	pop	r15
 2ee:	ef 90       	pop	r14
 2f0:	df 90       	pop	r13
 2f2:	cf 90       	pop	r12
 2f4:	0f 90       	pop	r0
 2f6:	0b be       	out	0x3b, r0	; 59
 2f8:	0f 90       	pop	r0
 2fa:	0f be       	out	0x3f, r0	; 63
 2fc:	0f 90       	pop	r0
 2fe:	1f 90       	pop	r1
 300:	18 95       	reti

00000302 <timer2Init>:
 302:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>

// Initialize timer2
void timer2Init( void ) {
	TCNT2 = TimerPreset;	// Preset value of counter 2
 306:	84 bd       	out	0x24, r24	; 36
	TIMSK |= BIT(6);		// T2 overflow interrupt enable
 308:	87 b7       	in	r24, 0x37	; 55
 30a:	80 64       	ori	r24, 0x40	; 64
 30c:	87 bf       	out	0x37, r24	; 55
	sei();				// turn_on intr all
 30e:	78 94       	sei
	TCCR2 = 0x07;		// Initialize T2: ext.counting, rising edge, run
 310:	87 e0       	ldi	r24, 0x07	; 7
 312:	85 bd       	out	0x25, r24	; 37
 314:	08 95       	ret

00000316 <main>:
}

int main(void) {
	
	DDRD &= ~BIT(7);		// PD7 op input: DDRD=xxxx xxx0
 316:	81 b3       	in	r24, 0x11	; 17
 318:	8f 77       	andi	r24, 0x7F	; 127
 31a:	81 bb       	out	0x11, r24	; 17
	DDRA = 0xFF;			// set PORTA for output (shows countregister)
 31c:	8f ef       	ldi	r24, 0xFF	; 255
 31e:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;			// set PORTB for output (shows tenthvalue)
 320:	87 bb       	out	0x17, r24	; 23
	
	init_4bits_mode();
 322:	27 df       	rcall	.-434    	; 0x172 <init_4bits_mode>
 324:	8f e1       	ldi	r24, 0x1F	; 31
 326:	9e e4       	ldi	r25, 0x4E	; 78
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <main+0x12>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <main+0x18>
	_delay_ms(10);
	
	lcd_clear();
 32e:	00 00       	nop
 330:	15 df       	rcall	.-470    	; 0x15c <lcd_clear>
	
	lcd_write_string("yeet");
 332:	85 e0       	ldi	r24, 0x05	; 5
 334:	91 e0       	ldi	r25, 0x01	; 1
	
	timer2Init();
 336:	3b df       	rcall	.-394    	; 0x1ae <lcd_write_string>
 338:	e4 df       	rcall	.-56     	; 0x302 <timer2Init>

	while (1) {
		PORTA = TCNT2;		// show value counter 2
 33a:	84 b5       	in	r24, 0x24	; 36
 33c:	8b bb       	out	0x1b, r24	; 27
		PORTB = number;	// show value tenth counter
 33e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
		wait(10);
 342:	88 bb       	out	0x18, r24	; 24
 344:	8a e0       	ldi	r24, 0x0A	; 10
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	3e df       	rcall	.-388    	; 0x1c6 <wait>
 34a:	f7 cf       	rjmp	.-18     	; 0x33a <main+0x24>

0000034c <snprintf>:
 34c:	0f 93       	push	r16
 34e:	1f 93       	push	r17
 350:	cf 93       	push	r28
 352:	df 93       	push	r29
 354:	cd b7       	in	r28, 0x3d	; 61
 356:	de b7       	in	r29, 0x3e	; 62
 358:	2e 97       	sbiw	r28, 0x0e	; 14
 35a:	0f b6       	in	r0, 0x3f	; 63
 35c:	f8 94       	cli
 35e:	de bf       	out	0x3e, r29	; 62
 360:	0f be       	out	0x3f, r0	; 63
 362:	cd bf       	out	0x3d, r28	; 61
 364:	0d 89       	ldd	r16, Y+21	; 0x15
 366:	1e 89       	ldd	r17, Y+22	; 0x16
 368:	8f 89       	ldd	r24, Y+23	; 0x17
 36a:	98 8d       	ldd	r25, Y+24	; 0x18
 36c:	26 e0       	ldi	r18, 0x06	; 6
 36e:	2c 83       	std	Y+4, r18	; 0x04
 370:	1a 83       	std	Y+2, r17	; 0x02
 372:	09 83       	std	Y+1, r16	; 0x01
 374:	97 ff       	sbrs	r25, 7
 376:	02 c0       	rjmp	.+4      	; 0x37c <snprintf+0x30>
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	90 e8       	ldi	r25, 0x80	; 128
 37c:	01 97       	sbiw	r24, 0x01	; 1
 37e:	9e 83       	std	Y+6, r25	; 0x06
 380:	8d 83       	std	Y+5, r24	; 0x05
 382:	ae 01       	movw	r20, r28
 384:	45 5e       	subi	r20, 0xE5	; 229
 386:	5f 4f       	sbci	r21, 0xFF	; 255
 388:	69 8d       	ldd	r22, Y+25	; 0x19
 38a:	7a 8d       	ldd	r23, Y+26	; 0x1a
 38c:	ce 01       	movw	r24, r28
 38e:	01 96       	adiw	r24, 0x01	; 1
 390:	19 d0       	rcall	.+50     	; 0x3c4 <vfprintf>
 392:	4d 81       	ldd	r20, Y+5	; 0x05
 394:	5e 81       	ldd	r21, Y+6	; 0x06
 396:	57 fd       	sbrc	r21, 7
 398:	0a c0       	rjmp	.+20     	; 0x3ae <snprintf+0x62>
 39a:	2f 81       	ldd	r18, Y+7	; 0x07
 39c:	38 85       	ldd	r19, Y+8	; 0x08
 39e:	42 17       	cp	r20, r18
 3a0:	53 07       	cpc	r21, r19
 3a2:	0c f4       	brge	.+2      	; 0x3a6 <snprintf+0x5a>
 3a4:	9a 01       	movw	r18, r20
 3a6:	f8 01       	movw	r30, r16
 3a8:	e2 0f       	add	r30, r18
 3aa:	f3 1f       	adc	r31, r19
 3ac:	10 82       	st	Z, r1
 3ae:	2e 96       	adiw	r28, 0x0e	; 14
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	f8 94       	cli
 3b4:	de bf       	out	0x3e, r29	; 62
 3b6:	0f be       	out	0x3f, r0	; 63
 3b8:	cd bf       	out	0x3d, r28	; 61
 3ba:	df 91       	pop	r29
 3bc:	cf 91       	pop	r28
 3be:	1f 91       	pop	r17
 3c0:	0f 91       	pop	r16
 3c2:	08 95       	ret

000003c4 <vfprintf>:
 3c4:	2f 92       	push	r2
 3c6:	3f 92       	push	r3
 3c8:	4f 92       	push	r4
 3ca:	5f 92       	push	r5
 3cc:	6f 92       	push	r6
 3ce:	7f 92       	push	r7
 3d0:	8f 92       	push	r8
 3d2:	9f 92       	push	r9
 3d4:	af 92       	push	r10
 3d6:	bf 92       	push	r11
 3d8:	cf 92       	push	r12
 3da:	df 92       	push	r13
 3dc:	ef 92       	push	r14
 3de:	ff 92       	push	r15
 3e0:	0f 93       	push	r16
 3e2:	1f 93       	push	r17
 3e4:	cf 93       	push	r28
 3e6:	df 93       	push	r29
 3e8:	cd b7       	in	r28, 0x3d	; 61
 3ea:	de b7       	in	r29, 0x3e	; 62
 3ec:	2b 97       	sbiw	r28, 0x0b	; 11
 3ee:	0f b6       	in	r0, 0x3f	; 63
 3f0:	f8 94       	cli
 3f2:	de bf       	out	0x3e, r29	; 62
 3f4:	0f be       	out	0x3f, r0	; 63
 3f6:	cd bf       	out	0x3d, r28	; 61
 3f8:	6c 01       	movw	r12, r24
 3fa:	7b 01       	movw	r14, r22
 3fc:	8a 01       	movw	r16, r20
 3fe:	fc 01       	movw	r30, r24
 400:	17 82       	std	Z+7, r1	; 0x07
 402:	16 82       	std	Z+6, r1	; 0x06
 404:	83 81       	ldd	r24, Z+3	; 0x03
 406:	81 ff       	sbrs	r24, 1
 408:	bf c1       	rjmp	.+894    	; 0x788 <__LOCK_REGION_LENGTH__+0x388>
 40a:	ce 01       	movw	r24, r28
 40c:	01 96       	adiw	r24, 0x01	; 1
 40e:	3c 01       	movw	r6, r24
 410:	f6 01       	movw	r30, r12
 412:	93 81       	ldd	r25, Z+3	; 0x03
 414:	f7 01       	movw	r30, r14
 416:	93 fd       	sbrc	r25, 3
 418:	85 91       	lpm	r24, Z+
 41a:	93 ff       	sbrs	r25, 3
 41c:	81 91       	ld	r24, Z+
 41e:	7f 01       	movw	r14, r30
 420:	88 23       	and	r24, r24
 422:	09 f4       	brne	.+2      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 424:	ad c1       	rjmp	.+858    	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 426:	85 32       	cpi	r24, 0x25	; 37
 428:	39 f4       	brne	.+14     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 42a:	93 fd       	sbrc	r25, 3
 42c:	85 91       	lpm	r24, Z+
 42e:	93 ff       	sbrs	r25, 3
 430:	81 91       	ld	r24, Z+
 432:	7f 01       	movw	r14, r30
 434:	85 32       	cpi	r24, 0x25	; 37
 436:	21 f4       	brne	.+8      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 438:	b6 01       	movw	r22, r12
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	d6 d1       	rcall	.+940    	; 0x7ea <fputc>
 43e:	e8 cf       	rjmp	.-48     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 440:	91 2c       	mov	r9, r1
 442:	21 2c       	mov	r2, r1
 444:	31 2c       	mov	r3, r1
 446:	ff e1       	ldi	r31, 0x1F	; 31
 448:	f3 15       	cp	r31, r3
 44a:	d8 f0       	brcs	.+54     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 44c:	8b 32       	cpi	r24, 0x2B	; 43
 44e:	79 f0       	breq	.+30     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 450:	38 f4       	brcc	.+14     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 452:	80 32       	cpi	r24, 0x20	; 32
 454:	79 f0       	breq	.+30     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 456:	83 32       	cpi	r24, 0x23	; 35
 458:	a1 f4       	brne	.+40     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 45a:	23 2d       	mov	r18, r3
 45c:	20 61       	ori	r18, 0x10	; 16
 45e:	1d c0       	rjmp	.+58     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 460:	8d 32       	cpi	r24, 0x2D	; 45
 462:	61 f0       	breq	.+24     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 464:	80 33       	cpi	r24, 0x30	; 48
 466:	69 f4       	brne	.+26     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 468:	23 2d       	mov	r18, r3
 46a:	21 60       	ori	r18, 0x01	; 1
 46c:	16 c0       	rjmp	.+44     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 46e:	83 2d       	mov	r24, r3
 470:	82 60       	ori	r24, 0x02	; 2
 472:	38 2e       	mov	r3, r24
 474:	e3 2d       	mov	r30, r3
 476:	e4 60       	ori	r30, 0x04	; 4
 478:	3e 2e       	mov	r3, r30
 47a:	2a c0       	rjmp	.+84     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 47c:	f3 2d       	mov	r31, r3
 47e:	f8 60       	ori	r31, 0x08	; 8
 480:	1d c0       	rjmp	.+58     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 482:	37 fc       	sbrc	r3, 7
 484:	2d c0       	rjmp	.+90     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 486:	20 ed       	ldi	r18, 0xD0	; 208
 488:	28 0f       	add	r18, r24
 48a:	2a 30       	cpi	r18, 0x0A	; 10
 48c:	40 f0       	brcs	.+16     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 48e:	8e 32       	cpi	r24, 0x2E	; 46
 490:	b9 f4       	brne	.+46     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 492:	36 fc       	sbrc	r3, 6
 494:	75 c1       	rjmp	.+746    	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 496:	23 2d       	mov	r18, r3
 498:	20 64       	ori	r18, 0x40	; 64
 49a:	32 2e       	mov	r3, r18
 49c:	19 c0       	rjmp	.+50     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 49e:	36 fe       	sbrs	r3, 6
 4a0:	06 c0       	rjmp	.+12     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a2:	8a e0       	ldi	r24, 0x0A	; 10
 4a4:	98 9e       	mul	r9, r24
 4a6:	20 0d       	add	r18, r0
 4a8:	11 24       	eor	r1, r1
 4aa:	92 2e       	mov	r9, r18
 4ac:	11 c0       	rjmp	.+34     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4ae:	ea e0       	ldi	r30, 0x0A	; 10
 4b0:	2e 9e       	mul	r2, r30
 4b2:	20 0d       	add	r18, r0
 4b4:	11 24       	eor	r1, r1
 4b6:	22 2e       	mov	r2, r18
 4b8:	f3 2d       	mov	r31, r3
 4ba:	f0 62       	ori	r31, 0x20	; 32
 4bc:	3f 2e       	mov	r3, r31
 4be:	08 c0       	rjmp	.+16     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4c0:	8c 36       	cpi	r24, 0x6C	; 108
 4c2:	21 f4       	brne	.+8      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c4:	83 2d       	mov	r24, r3
 4c6:	80 68       	ori	r24, 0x80	; 128
 4c8:	38 2e       	mov	r3, r24
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4cc:	88 36       	cpi	r24, 0x68	; 104
 4ce:	41 f4       	brne	.+16     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d0:	f7 01       	movw	r30, r14
 4d2:	93 fd       	sbrc	r25, 3
 4d4:	85 91       	lpm	r24, Z+
 4d6:	93 ff       	sbrs	r25, 3
 4d8:	81 91       	ld	r24, Z+
 4da:	7f 01       	movw	r14, r30
 4dc:	81 11       	cpse	r24, r1
 4de:	b3 cf       	rjmp	.-154    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 4e0:	98 2f       	mov	r25, r24
 4e2:	9f 7d       	andi	r25, 0xDF	; 223
 4e4:	95 54       	subi	r25, 0x45	; 69
 4e6:	93 30       	cpi	r25, 0x03	; 3
 4e8:	28 f4       	brcc	.+10     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4ea:	0c 5f       	subi	r16, 0xFC	; 252
 4ec:	1f 4f       	sbci	r17, 0xFF	; 255
 4ee:	9f e3       	ldi	r25, 0x3F	; 63
 4f0:	99 83       	std	Y+1, r25	; 0x01
 4f2:	0d c0       	rjmp	.+26     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4f4:	83 36       	cpi	r24, 0x63	; 99
 4f6:	31 f0       	breq	.+12     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4f8:	83 37       	cpi	r24, 0x73	; 115
 4fa:	71 f0       	breq	.+28     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4fc:	83 35       	cpi	r24, 0x53	; 83
 4fe:	09 f0       	breq	.+2      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 500:	55 c0       	rjmp	.+170    	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 502:	20 c0       	rjmp	.+64     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 504:	f8 01       	movw	r30, r16
 506:	80 81       	ld	r24, Z
 508:	89 83       	std	Y+1, r24	; 0x01
 50a:	0e 5f       	subi	r16, 0xFE	; 254
 50c:	1f 4f       	sbci	r17, 0xFF	; 255
 50e:	88 24       	eor	r8, r8
 510:	83 94       	inc	r8
 512:	91 2c       	mov	r9, r1
 514:	53 01       	movw	r10, r6
 516:	12 c0       	rjmp	.+36     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 518:	28 01       	movw	r4, r16
 51a:	f2 e0       	ldi	r31, 0x02	; 2
 51c:	4f 0e       	add	r4, r31
 51e:	51 1c       	adc	r5, r1
 520:	f8 01       	movw	r30, r16
 522:	a0 80       	ld	r10, Z
 524:	b1 80       	ldd	r11, Z+1	; 0x01
 526:	36 fe       	sbrs	r3, 6
 528:	03 c0       	rjmp	.+6      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52a:	69 2d       	mov	r22, r9
 52c:	70 e0       	ldi	r23, 0x00	; 0
 52e:	02 c0       	rjmp	.+4      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 530:	6f ef       	ldi	r22, 0xFF	; 255
 532:	7f ef       	ldi	r23, 0xFF	; 255
 534:	c5 01       	movw	r24, r10
 536:	4e d1       	rcall	.+668    	; 0x7d4 <strnlen>
 538:	4c 01       	movw	r8, r24
 53a:	82 01       	movw	r16, r4
 53c:	f3 2d       	mov	r31, r3
 53e:	ff 77       	andi	r31, 0x7F	; 127
 540:	3f 2e       	mov	r3, r31
 542:	15 c0       	rjmp	.+42     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 544:	28 01       	movw	r4, r16
 546:	22 e0       	ldi	r18, 0x02	; 2
 548:	42 0e       	add	r4, r18
 54a:	51 1c       	adc	r5, r1
 54c:	f8 01       	movw	r30, r16
 54e:	a0 80       	ld	r10, Z
 550:	b1 80       	ldd	r11, Z+1	; 0x01
 552:	36 fe       	sbrs	r3, 6
 554:	03 c0       	rjmp	.+6      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 556:	69 2d       	mov	r22, r9
 558:	70 e0       	ldi	r23, 0x00	; 0
 55a:	02 c0       	rjmp	.+4      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55c:	6f ef       	ldi	r22, 0xFF	; 255
 55e:	7f ef       	ldi	r23, 0xFF	; 255
 560:	c5 01       	movw	r24, r10
 562:	2d d1       	rcall	.+602    	; 0x7be <strnlen_P>
 564:	4c 01       	movw	r8, r24
 566:	f3 2d       	mov	r31, r3
 568:	f0 68       	ori	r31, 0x80	; 128
 56a:	3f 2e       	mov	r3, r31
 56c:	82 01       	movw	r16, r4
 56e:	33 fc       	sbrc	r3, 3
 570:	19 c0       	rjmp	.+50     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 572:	82 2d       	mov	r24, r2
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	88 16       	cp	r8, r24
 578:	99 06       	cpc	r9, r25
 57a:	a0 f4       	brcc	.+40     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 57c:	b6 01       	movw	r22, r12
 57e:	80 e2       	ldi	r24, 0x20	; 32
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	33 d1       	rcall	.+614    	; 0x7ea <fputc>
 584:	2a 94       	dec	r2
 586:	f5 cf       	rjmp	.-22     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 588:	f5 01       	movw	r30, r10
 58a:	37 fc       	sbrc	r3, 7
 58c:	85 91       	lpm	r24, Z+
 58e:	37 fe       	sbrs	r3, 7
 590:	81 91       	ld	r24, Z+
 592:	5f 01       	movw	r10, r30
 594:	b6 01       	movw	r22, r12
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	28 d1       	rcall	.+592    	; 0x7ea <fputc>
 59a:	21 10       	cpse	r2, r1
 59c:	2a 94       	dec	r2
 59e:	21 e0       	ldi	r18, 0x01	; 1
 5a0:	82 1a       	sub	r8, r18
 5a2:	91 08       	sbc	r9, r1
 5a4:	81 14       	cp	r8, r1
 5a6:	91 04       	cpc	r9, r1
 5a8:	79 f7       	brne	.-34     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 5aa:	e1 c0       	rjmp	.+450    	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 5ac:	84 36       	cpi	r24, 0x64	; 100
 5ae:	11 f0       	breq	.+4      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5b0:	89 36       	cpi	r24, 0x69	; 105
 5b2:	39 f5       	brne	.+78     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5b4:	f8 01       	movw	r30, r16
 5b6:	37 fe       	sbrs	r3, 7
 5b8:	07 c0       	rjmp	.+14     	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5ba:	60 81       	ld	r22, Z
 5bc:	71 81       	ldd	r23, Z+1	; 0x01
 5be:	82 81       	ldd	r24, Z+2	; 0x02
 5c0:	93 81       	ldd	r25, Z+3	; 0x03
 5c2:	0c 5f       	subi	r16, 0xFC	; 252
 5c4:	1f 4f       	sbci	r17, 0xFF	; 255
 5c6:	08 c0       	rjmp	.+16     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5c8:	60 81       	ld	r22, Z
 5ca:	71 81       	ldd	r23, Z+1	; 0x01
 5cc:	07 2e       	mov	r0, r23
 5ce:	00 0c       	add	r0, r0
 5d0:	88 0b       	sbc	r24, r24
 5d2:	99 0b       	sbc	r25, r25
 5d4:	0e 5f       	subi	r16, 0xFE	; 254
 5d6:	1f 4f       	sbci	r17, 0xFF	; 255
 5d8:	f3 2d       	mov	r31, r3
 5da:	ff 76       	andi	r31, 0x6F	; 111
 5dc:	3f 2e       	mov	r3, r31
 5de:	97 ff       	sbrs	r25, 7
 5e0:	09 c0       	rjmp	.+18     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e2:	90 95       	com	r25
 5e4:	80 95       	com	r24
 5e6:	70 95       	com	r23
 5e8:	61 95       	neg	r22
 5ea:	7f 4f       	sbci	r23, 0xFF	; 255
 5ec:	8f 4f       	sbci	r24, 0xFF	; 255
 5ee:	9f 4f       	sbci	r25, 0xFF	; 255
 5f0:	f0 68       	ori	r31, 0x80	; 128
 5f2:	3f 2e       	mov	r3, r31
 5f4:	2a e0       	ldi	r18, 0x0A	; 10
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	a3 01       	movw	r20, r6
 5fa:	33 d1       	rcall	.+614    	; 0x862 <__ultoa_invert>
 5fc:	88 2e       	mov	r8, r24
 5fe:	86 18       	sub	r8, r6
 600:	44 c0       	rjmp	.+136    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 602:	85 37       	cpi	r24, 0x75	; 117
 604:	31 f4       	brne	.+12     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 606:	23 2d       	mov	r18, r3
 608:	2f 7e       	andi	r18, 0xEF	; 239
 60a:	b2 2e       	mov	r11, r18
 60c:	2a e0       	ldi	r18, 0x0A	; 10
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	25 c0       	rjmp	.+74     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 612:	93 2d       	mov	r25, r3
 614:	99 7f       	andi	r25, 0xF9	; 249
 616:	b9 2e       	mov	r11, r25
 618:	8f 36       	cpi	r24, 0x6F	; 111
 61a:	c1 f0       	breq	.+48     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 61c:	18 f4       	brcc	.+6      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 61e:	88 35       	cpi	r24, 0x58	; 88
 620:	79 f0       	breq	.+30     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 622:	ae c0       	rjmp	.+348    	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 624:	80 37       	cpi	r24, 0x70	; 112
 626:	19 f0       	breq	.+6      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 628:	88 37       	cpi	r24, 0x78	; 120
 62a:	21 f0       	breq	.+8      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 62c:	a9 c0       	rjmp	.+338    	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 62e:	e9 2f       	mov	r30, r25
 630:	e0 61       	ori	r30, 0x10	; 16
 632:	be 2e       	mov	r11, r30
 634:	b4 fe       	sbrs	r11, 4
 636:	0d c0       	rjmp	.+26     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 638:	fb 2d       	mov	r31, r11
 63a:	f4 60       	ori	r31, 0x04	; 4
 63c:	bf 2e       	mov	r11, r31
 63e:	09 c0       	rjmp	.+18     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 640:	34 fe       	sbrs	r3, 4
 642:	0a c0       	rjmp	.+20     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 644:	29 2f       	mov	r18, r25
 646:	26 60       	ori	r18, 0x06	; 6
 648:	b2 2e       	mov	r11, r18
 64a:	06 c0       	rjmp	.+12     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 64c:	28 e0       	ldi	r18, 0x08	; 8
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	05 c0       	rjmp	.+10     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 652:	20 e1       	ldi	r18, 0x10	; 16
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	02 c0       	rjmp	.+4      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 658:	20 e1       	ldi	r18, 0x10	; 16
 65a:	32 e0       	ldi	r19, 0x02	; 2
 65c:	f8 01       	movw	r30, r16
 65e:	b7 fe       	sbrs	r11, 7
 660:	07 c0       	rjmp	.+14     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 662:	60 81       	ld	r22, Z
 664:	71 81       	ldd	r23, Z+1	; 0x01
 666:	82 81       	ldd	r24, Z+2	; 0x02
 668:	93 81       	ldd	r25, Z+3	; 0x03
 66a:	0c 5f       	subi	r16, 0xFC	; 252
 66c:	1f 4f       	sbci	r17, 0xFF	; 255
 66e:	06 c0       	rjmp	.+12     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 670:	60 81       	ld	r22, Z
 672:	71 81       	ldd	r23, Z+1	; 0x01
 674:	80 e0       	ldi	r24, 0x00	; 0
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	0e 5f       	subi	r16, 0xFE	; 254
 67a:	1f 4f       	sbci	r17, 0xFF	; 255
 67c:	a3 01       	movw	r20, r6
 67e:	f1 d0       	rcall	.+482    	; 0x862 <__ultoa_invert>
 680:	88 2e       	mov	r8, r24
 682:	86 18       	sub	r8, r6
 684:	fb 2d       	mov	r31, r11
 686:	ff 77       	andi	r31, 0x7F	; 127
 688:	3f 2e       	mov	r3, r31
 68a:	36 fe       	sbrs	r3, 6
 68c:	0d c0       	rjmp	.+26     	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 68e:	23 2d       	mov	r18, r3
 690:	2e 7f       	andi	r18, 0xFE	; 254
 692:	a2 2e       	mov	r10, r18
 694:	89 14       	cp	r8, r9
 696:	58 f4       	brcc	.+22     	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 698:	34 fe       	sbrs	r3, 4
 69a:	0b c0       	rjmp	.+22     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 69c:	32 fc       	sbrc	r3, 2
 69e:	09 c0       	rjmp	.+18     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 6a0:	83 2d       	mov	r24, r3
 6a2:	8e 7e       	andi	r24, 0xEE	; 238
 6a4:	a8 2e       	mov	r10, r24
 6a6:	05 c0       	rjmp	.+10     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 6a8:	b8 2c       	mov	r11, r8
 6aa:	a3 2c       	mov	r10, r3
 6ac:	03 c0       	rjmp	.+6      	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6ae:	b8 2c       	mov	r11, r8
 6b0:	01 c0       	rjmp	.+2      	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6b2:	b9 2c       	mov	r11, r9
 6b4:	a4 fe       	sbrs	r10, 4
 6b6:	0f c0       	rjmp	.+30     	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6b8:	fe 01       	movw	r30, r28
 6ba:	e8 0d       	add	r30, r8
 6bc:	f1 1d       	adc	r31, r1
 6be:	80 81       	ld	r24, Z
 6c0:	80 33       	cpi	r24, 0x30	; 48
 6c2:	21 f4       	brne	.+8      	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6c4:	9a 2d       	mov	r25, r10
 6c6:	99 7e       	andi	r25, 0xE9	; 233
 6c8:	a9 2e       	mov	r10, r25
 6ca:	09 c0       	rjmp	.+18     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6cc:	a2 fe       	sbrs	r10, 2
 6ce:	06 c0       	rjmp	.+12     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6d0:	b3 94       	inc	r11
 6d2:	b3 94       	inc	r11
 6d4:	04 c0       	rjmp	.+8      	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6d6:	8a 2d       	mov	r24, r10
 6d8:	86 78       	andi	r24, 0x86	; 134
 6da:	09 f0       	breq	.+2      	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6dc:	b3 94       	inc	r11
 6de:	a3 fc       	sbrc	r10, 3
 6e0:	10 c0       	rjmp	.+32     	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 6e2:	a0 fe       	sbrs	r10, 0
 6e4:	06 c0       	rjmp	.+12     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6e6:	b2 14       	cp	r11, r2
 6e8:	80 f4       	brcc	.+32     	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
 6ea:	28 0c       	add	r2, r8
 6ec:	92 2c       	mov	r9, r2
 6ee:	9b 18       	sub	r9, r11
 6f0:	0d c0       	rjmp	.+26     	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 6f2:	b2 14       	cp	r11, r2
 6f4:	58 f4       	brcc	.+22     	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 6f6:	b6 01       	movw	r22, r12
 6f8:	80 e2       	ldi	r24, 0x20	; 32
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	76 d0       	rcall	.+236    	; 0x7ea <fputc>
 6fe:	b3 94       	inc	r11
 700:	f8 cf       	rjmp	.-16     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 702:	b2 14       	cp	r11, r2
 704:	18 f4       	brcc	.+6      	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 706:	2b 18       	sub	r2, r11
 708:	02 c0       	rjmp	.+4      	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 70a:	98 2c       	mov	r9, r8
 70c:	21 2c       	mov	r2, r1
 70e:	a4 fe       	sbrs	r10, 4
 710:	0f c0       	rjmp	.+30     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 712:	b6 01       	movw	r22, r12
 714:	80 e3       	ldi	r24, 0x30	; 48
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	68 d0       	rcall	.+208    	; 0x7ea <fputc>
 71a:	a2 fe       	sbrs	r10, 2
 71c:	16 c0       	rjmp	.+44     	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 71e:	a1 fc       	sbrc	r10, 1
 720:	03 c0       	rjmp	.+6      	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 722:	88 e7       	ldi	r24, 0x78	; 120
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	02 c0       	rjmp	.+4      	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 728:	88 e5       	ldi	r24, 0x58	; 88
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	b6 01       	movw	r22, r12
 72e:	0c c0       	rjmp	.+24     	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
 730:	8a 2d       	mov	r24, r10
 732:	86 78       	andi	r24, 0x86	; 134
 734:	51 f0       	breq	.+20     	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 736:	a1 fe       	sbrs	r10, 1
 738:	02 c0       	rjmp	.+4      	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 73a:	8b e2       	ldi	r24, 0x2B	; 43
 73c:	01 c0       	rjmp	.+2      	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 73e:	80 e2       	ldi	r24, 0x20	; 32
 740:	a7 fc       	sbrc	r10, 7
 742:	8d e2       	ldi	r24, 0x2D	; 45
 744:	b6 01       	movw	r22, r12
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	50 d0       	rcall	.+160    	; 0x7ea <fputc>
 74a:	89 14       	cp	r8, r9
 74c:	30 f4       	brcc	.+12     	; 0x75a <__LOCK_REGION_LENGTH__+0x35a>
 74e:	b6 01       	movw	r22, r12
 750:	80 e3       	ldi	r24, 0x30	; 48
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	4a d0       	rcall	.+148    	; 0x7ea <fputc>
 756:	9a 94       	dec	r9
 758:	f8 cf       	rjmp	.-16     	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 75a:	8a 94       	dec	r8
 75c:	f3 01       	movw	r30, r6
 75e:	e8 0d       	add	r30, r8
 760:	f1 1d       	adc	r31, r1
 762:	80 81       	ld	r24, Z
 764:	b6 01       	movw	r22, r12
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	40 d0       	rcall	.+128    	; 0x7ea <fputc>
 76a:	81 10       	cpse	r8, r1
 76c:	f6 cf       	rjmp	.-20     	; 0x75a <__LOCK_REGION_LENGTH__+0x35a>
 76e:	22 20       	and	r2, r2
 770:	09 f4       	brne	.+2      	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 772:	4e ce       	rjmp	.-868    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 774:	b6 01       	movw	r22, r12
 776:	80 e2       	ldi	r24, 0x20	; 32
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	37 d0       	rcall	.+110    	; 0x7ea <fputc>
 77c:	2a 94       	dec	r2
 77e:	f7 cf       	rjmp	.-18     	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 780:	f6 01       	movw	r30, r12
 782:	86 81       	ldd	r24, Z+6	; 0x06
 784:	97 81       	ldd	r25, Z+7	; 0x07
 786:	02 c0       	rjmp	.+4      	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 788:	8f ef       	ldi	r24, 0xFF	; 255
 78a:	9f ef       	ldi	r25, 0xFF	; 255
 78c:	2b 96       	adiw	r28, 0x0b	; 11
 78e:	0f b6       	in	r0, 0x3f	; 63
 790:	f8 94       	cli
 792:	de bf       	out	0x3e, r29	; 62
 794:	0f be       	out	0x3f, r0	; 63
 796:	cd bf       	out	0x3d, r28	; 61
 798:	df 91       	pop	r29
 79a:	cf 91       	pop	r28
 79c:	1f 91       	pop	r17
 79e:	0f 91       	pop	r16
 7a0:	ff 90       	pop	r15
 7a2:	ef 90       	pop	r14
 7a4:	df 90       	pop	r13
 7a6:	cf 90       	pop	r12
 7a8:	bf 90       	pop	r11
 7aa:	af 90       	pop	r10
 7ac:	9f 90       	pop	r9
 7ae:	8f 90       	pop	r8
 7b0:	7f 90       	pop	r7
 7b2:	6f 90       	pop	r6
 7b4:	5f 90       	pop	r5
 7b6:	4f 90       	pop	r4
 7b8:	3f 90       	pop	r3
 7ba:	2f 90       	pop	r2
 7bc:	08 95       	ret

000007be <strnlen_P>:
 7be:	fc 01       	movw	r30, r24
 7c0:	05 90       	lpm	r0, Z+
 7c2:	61 50       	subi	r22, 0x01	; 1
 7c4:	70 40       	sbci	r23, 0x00	; 0
 7c6:	01 10       	cpse	r0, r1
 7c8:	d8 f7       	brcc	.-10     	; 0x7c0 <strnlen_P+0x2>
 7ca:	80 95       	com	r24
 7cc:	90 95       	com	r25
 7ce:	8e 0f       	add	r24, r30
 7d0:	9f 1f       	adc	r25, r31
 7d2:	08 95       	ret

000007d4 <strnlen>:
 7d4:	fc 01       	movw	r30, r24
 7d6:	61 50       	subi	r22, 0x01	; 1
 7d8:	70 40       	sbci	r23, 0x00	; 0
 7da:	01 90       	ld	r0, Z+
 7dc:	01 10       	cpse	r0, r1
 7de:	d8 f7       	brcc	.-10     	; 0x7d6 <strnlen+0x2>
 7e0:	80 95       	com	r24
 7e2:	90 95       	com	r25
 7e4:	8e 0f       	add	r24, r30
 7e6:	9f 1f       	adc	r25, r31
 7e8:	08 95       	ret

000007ea <fputc>:
 7ea:	0f 93       	push	r16
 7ec:	1f 93       	push	r17
 7ee:	cf 93       	push	r28
 7f0:	df 93       	push	r29
 7f2:	fb 01       	movw	r30, r22
 7f4:	23 81       	ldd	r18, Z+3	; 0x03
 7f6:	21 fd       	sbrc	r18, 1
 7f8:	03 c0       	rjmp	.+6      	; 0x800 <fputc+0x16>
 7fa:	8f ef       	ldi	r24, 0xFF	; 255
 7fc:	9f ef       	ldi	r25, 0xFF	; 255
 7fe:	2c c0       	rjmp	.+88     	; 0x858 <fputc+0x6e>
 800:	22 ff       	sbrs	r18, 2
 802:	16 c0       	rjmp	.+44     	; 0x830 <fputc+0x46>
 804:	46 81       	ldd	r20, Z+6	; 0x06
 806:	57 81       	ldd	r21, Z+7	; 0x07
 808:	24 81       	ldd	r18, Z+4	; 0x04
 80a:	35 81       	ldd	r19, Z+5	; 0x05
 80c:	42 17       	cp	r20, r18
 80e:	53 07       	cpc	r21, r19
 810:	44 f4       	brge	.+16     	; 0x822 <fputc+0x38>
 812:	a0 81       	ld	r26, Z
 814:	b1 81       	ldd	r27, Z+1	; 0x01
 816:	9d 01       	movw	r18, r26
 818:	2f 5f       	subi	r18, 0xFF	; 255
 81a:	3f 4f       	sbci	r19, 0xFF	; 255
 81c:	31 83       	std	Z+1, r19	; 0x01
 81e:	20 83       	st	Z, r18
 820:	8c 93       	st	X, r24
 822:	26 81       	ldd	r18, Z+6	; 0x06
 824:	37 81       	ldd	r19, Z+7	; 0x07
 826:	2f 5f       	subi	r18, 0xFF	; 255
 828:	3f 4f       	sbci	r19, 0xFF	; 255
 82a:	37 83       	std	Z+7, r19	; 0x07
 82c:	26 83       	std	Z+6, r18	; 0x06
 82e:	14 c0       	rjmp	.+40     	; 0x858 <fputc+0x6e>
 830:	8b 01       	movw	r16, r22
 832:	ec 01       	movw	r28, r24
 834:	fb 01       	movw	r30, r22
 836:	00 84       	ldd	r0, Z+8	; 0x08
 838:	f1 85       	ldd	r31, Z+9	; 0x09
 83a:	e0 2d       	mov	r30, r0
 83c:	09 95       	icall
 83e:	89 2b       	or	r24, r25
 840:	e1 f6       	brne	.-72     	; 0x7fa <fputc+0x10>
 842:	d8 01       	movw	r26, r16
 844:	16 96       	adiw	r26, 0x06	; 6
 846:	8d 91       	ld	r24, X+
 848:	9c 91       	ld	r25, X
 84a:	17 97       	sbiw	r26, 0x07	; 7
 84c:	01 96       	adiw	r24, 0x01	; 1
 84e:	17 96       	adiw	r26, 0x07	; 7
 850:	9c 93       	st	X, r25
 852:	8e 93       	st	-X, r24
 854:	16 97       	sbiw	r26, 0x06	; 6
 856:	ce 01       	movw	r24, r28
 858:	df 91       	pop	r29
 85a:	cf 91       	pop	r28
 85c:	1f 91       	pop	r17
 85e:	0f 91       	pop	r16
 860:	08 95       	ret

00000862 <__ultoa_invert>:
 862:	fa 01       	movw	r30, r20
 864:	aa 27       	eor	r26, r26
 866:	28 30       	cpi	r18, 0x08	; 8
 868:	51 f1       	breq	.+84     	; 0x8be <__ultoa_invert+0x5c>
 86a:	20 31       	cpi	r18, 0x10	; 16
 86c:	81 f1       	breq	.+96     	; 0x8ce <__ultoa_invert+0x6c>
 86e:	e8 94       	clt
 870:	6f 93       	push	r22
 872:	6e 7f       	andi	r22, 0xFE	; 254
 874:	6e 5f       	subi	r22, 0xFE	; 254
 876:	7f 4f       	sbci	r23, 0xFF	; 255
 878:	8f 4f       	sbci	r24, 0xFF	; 255
 87a:	9f 4f       	sbci	r25, 0xFF	; 255
 87c:	af 4f       	sbci	r26, 0xFF	; 255
 87e:	b1 e0       	ldi	r27, 0x01	; 1
 880:	3e d0       	rcall	.+124    	; 0x8fe <__ultoa_invert+0x9c>
 882:	b4 e0       	ldi	r27, 0x04	; 4
 884:	3c d0       	rcall	.+120    	; 0x8fe <__ultoa_invert+0x9c>
 886:	67 0f       	add	r22, r23
 888:	78 1f       	adc	r23, r24
 88a:	89 1f       	adc	r24, r25
 88c:	9a 1f       	adc	r25, r26
 88e:	a1 1d       	adc	r26, r1
 890:	68 0f       	add	r22, r24
 892:	79 1f       	adc	r23, r25
 894:	8a 1f       	adc	r24, r26
 896:	91 1d       	adc	r25, r1
 898:	a1 1d       	adc	r26, r1
 89a:	6a 0f       	add	r22, r26
 89c:	71 1d       	adc	r23, r1
 89e:	81 1d       	adc	r24, r1
 8a0:	91 1d       	adc	r25, r1
 8a2:	a1 1d       	adc	r26, r1
 8a4:	20 d0       	rcall	.+64     	; 0x8e6 <__ultoa_invert+0x84>
 8a6:	09 f4       	brne	.+2      	; 0x8aa <__ultoa_invert+0x48>
 8a8:	68 94       	set
 8aa:	3f 91       	pop	r19
 8ac:	2a e0       	ldi	r18, 0x0A	; 10
 8ae:	26 9f       	mul	r18, r22
 8b0:	11 24       	eor	r1, r1
 8b2:	30 19       	sub	r19, r0
 8b4:	30 5d       	subi	r19, 0xD0	; 208
 8b6:	31 93       	st	Z+, r19
 8b8:	de f6       	brtc	.-74     	; 0x870 <__ultoa_invert+0xe>
 8ba:	cf 01       	movw	r24, r30
 8bc:	08 95       	ret
 8be:	46 2f       	mov	r20, r22
 8c0:	47 70       	andi	r20, 0x07	; 7
 8c2:	40 5d       	subi	r20, 0xD0	; 208
 8c4:	41 93       	st	Z+, r20
 8c6:	b3 e0       	ldi	r27, 0x03	; 3
 8c8:	0f d0       	rcall	.+30     	; 0x8e8 <__ultoa_invert+0x86>
 8ca:	c9 f7       	brne	.-14     	; 0x8be <__ultoa_invert+0x5c>
 8cc:	f6 cf       	rjmp	.-20     	; 0x8ba <__ultoa_invert+0x58>
 8ce:	46 2f       	mov	r20, r22
 8d0:	4f 70       	andi	r20, 0x0F	; 15
 8d2:	40 5d       	subi	r20, 0xD0	; 208
 8d4:	4a 33       	cpi	r20, 0x3A	; 58
 8d6:	18 f0       	brcs	.+6      	; 0x8de <__ultoa_invert+0x7c>
 8d8:	49 5d       	subi	r20, 0xD9	; 217
 8da:	31 fd       	sbrc	r19, 1
 8dc:	40 52       	subi	r20, 0x20	; 32
 8de:	41 93       	st	Z+, r20
 8e0:	02 d0       	rcall	.+4      	; 0x8e6 <__ultoa_invert+0x84>
 8e2:	a9 f7       	brne	.-22     	; 0x8ce <__ultoa_invert+0x6c>
 8e4:	ea cf       	rjmp	.-44     	; 0x8ba <__ultoa_invert+0x58>
 8e6:	b4 e0       	ldi	r27, 0x04	; 4
 8e8:	a6 95       	lsr	r26
 8ea:	97 95       	ror	r25
 8ec:	87 95       	ror	r24
 8ee:	77 95       	ror	r23
 8f0:	67 95       	ror	r22
 8f2:	ba 95       	dec	r27
 8f4:	c9 f7       	brne	.-14     	; 0x8e8 <__ultoa_invert+0x86>
 8f6:	00 97       	sbiw	r24, 0x00	; 0
 8f8:	61 05       	cpc	r22, r1
 8fa:	71 05       	cpc	r23, r1
 8fc:	08 95       	ret
 8fe:	9b 01       	movw	r18, r22
 900:	ac 01       	movw	r20, r24
 902:	0a 2e       	mov	r0, r26
 904:	06 94       	lsr	r0
 906:	57 95       	ror	r21
 908:	47 95       	ror	r20
 90a:	37 95       	ror	r19
 90c:	27 95       	ror	r18
 90e:	ba 95       	dec	r27
 910:	c9 f7       	brne	.-14     	; 0x904 <__ultoa_invert+0xa2>
 912:	62 0f       	add	r22, r18
 914:	73 1f       	adc	r23, r19
 916:	84 1f       	adc	r24, r20
 918:	95 1f       	adc	r25, r21
 91a:	a0 1d       	adc	r26, r0
 91c:	08 95       	ret

0000091e <_exit>:
 91e:	f8 94       	cli

00000920 <__stop_program>:
 920:	ff cf       	rjmp	.-2      	; 0x920 <__stop_program>
