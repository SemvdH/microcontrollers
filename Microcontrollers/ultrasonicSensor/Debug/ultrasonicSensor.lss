
ultrasonicSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000092e  000009a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000092e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a04  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fc1  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a99  00000000  00000000  00001ab9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000716  00000000  00000000  00002552  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001b4  00000000  00000000  00002c68  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000059a  00000000  00000000  00002e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000049c  00000000  00000000  000033b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00003852  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	5a c1       	rjmp	.+692    	; 0x2ba <__vector_1>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e2       	ldi	r30, 0x2E	; 46
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	2f d1       	rcall	.+606    	; 0x312 <main>
  b4:	3a c4       	rjmp	.+2164   	; 0x92a <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <sbi_porta>:
	}
}

void lcd_move_right(void){
	
	lcd_write_command(0x1E);
  b8:	9b b3       	in	r25, 0x1b	; 27
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	30 e0       	ldi	r19, 0x00	; 0
  be:	02 c0       	rjmp	.+4      	; 0xc4 <sbi_porta+0xc>
  c0:	22 0f       	add	r18, r18
  c2:	33 1f       	adc	r19, r19
  c4:	8a 95       	dec	r24
  c6:	e2 f7       	brpl	.-8      	; 0xc0 <sbi_porta+0x8>
  c8:	29 2b       	or	r18, r25
  ca:	2b bb       	out	0x1b, r18	; 27
  cc:	08 95       	ret

000000ce <cbi_porta>:
  ce:	9b b3       	in	r25, 0x1b	; 27
  d0:	21 e0       	ldi	r18, 0x01	; 1
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	02 c0       	rjmp	.+4      	; 0xda <cbi_porta+0xc>
  d6:	22 0f       	add	r18, r18
  d8:	33 1f       	adc	r19, r19
  da:	8a 95       	dec	r24
  dc:	e2 f7       	brpl	.-8      	; 0xd6 <cbi_porta+0x8>
  de:	20 95       	com	r18
  e0:	29 23       	and	r18, r25
  e2:	2b bb       	out	0x1b, r18	; 27
  e4:	08 95       	ret

000000e6 <lcd_strobe_lcd_e>:
  e6:	86 e0       	ldi	r24, 0x06	; 6
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	e6 df       	rcall	.-52     	; 0xb8 <sbi_porta>
  ec:	83 ec       	ldi	r24, 0xC3	; 195
  ee:	99 e0       	ldi	r25, 0x09	; 9
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <lcd_strobe_lcd_e+0xa>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <lcd_strobe_lcd_e+0x10>
  f6:	00 00       	nop
  f8:	86 e0       	ldi	r24, 0x06	; 6
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	e8 df       	rcall	.-48     	; 0xce <cbi_porta>
  fe:	83 ec       	ldi	r24, 0xC3	; 195
 100:	99 e0       	ldi	r25, 0x09	; 9
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <lcd_strobe_lcd_e+0x1c>
 106:	00 c0       	rjmp	.+0      	; 0x108 <lcd_strobe_lcd_e+0x22>
 108:	00 00       	nop
 10a:	08 95       	ret

0000010c <lcd_write_character>:
 10c:	cf 93       	push	r28
 10e:	c8 2f       	mov	r28, r24
 110:	85 bb       	out	0x15, r24	; 21
 112:	84 e0       	ldi	r24, 0x04	; 4
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	d0 df       	rcall	.-96     	; 0xb8 <sbi_porta>
 118:	e6 df       	rcall	.-52     	; 0xe6 <lcd_strobe_lcd_e>
 11a:	c2 95       	swap	r28
 11c:	c0 7f       	andi	r28, 0xF0	; 240
 11e:	c5 bb       	out	0x15, r28	; 21
 120:	84 e0       	ldi	r24, 0x04	; 4
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	c9 df       	rcall	.-110    	; 0xb8 <sbi_porta>
 126:	df df       	rcall	.-66     	; 0xe6 <lcd_strobe_lcd_e>
 128:	cf 91       	pop	r28
 12a:	08 95       	ret

0000012c <lcd_write_command>:
 12c:	cf 93       	push	r28
 12e:	c8 2f       	mov	r28, r24
 130:	85 bb       	out	0x15, r24	; 21
 132:	84 e0       	ldi	r24, 0x04	; 4
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	cb df       	rcall	.-106    	; 0xce <cbi_porta>
 138:	d6 df       	rcall	.-84     	; 0xe6 <lcd_strobe_lcd_e>
 13a:	c2 95       	swap	r28
 13c:	c0 7f       	andi	r28, 0xF0	; 240
 13e:	c5 bb       	out	0x15, r28	; 21
 140:	84 e0       	ldi	r24, 0x04	; 4
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	c4 df       	rcall	.-120    	; 0xce <cbi_porta>
 146:	cf df       	rcall	.-98     	; 0xe6 <lcd_strobe_lcd_e>
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

0000014c <lcd_clear>:
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	ee df       	rcall	.-36     	; 0x12c <lcd_write_command>
 150:	87 e8       	ldi	r24, 0x87	; 135
 152:	93 e1       	ldi	r25, 0x13	; 19
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <lcd_clear+0x8>
 158:	00 c0       	rjmp	.+0      	; 0x15a <lcd_clear+0xe>
 15a:	00 00       	nop
 15c:	80 e8       	ldi	r24, 0x80	; 128
 15e:	e6 cf       	rjmp	.-52     	; 0x12c <lcd_write_command>
 160:	08 95       	ret

00000162 <init_4bits_mode>:
 162:	cf 93       	push	r28
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	84 bb       	out	0x14, r24	; 20
 168:	85 bb       	out	0x15, r24	; 21
 16a:	81 bb       	out	0x11, r24	; 17
 16c:	8a bb       	out	0x1a, r24	; 26
 16e:	15 ba       	out	0x15, r1	; 21
 170:	1b ba       	out	0x1b, r1	; 27
 172:	c0 e2       	ldi	r28, 0x20	; 32
 174:	c5 bb       	out	0x15, r28	; 21
 176:	b7 df       	rcall	.-146    	; 0xe6 <lcd_strobe_lcd_e>
 178:	c5 bb       	out	0x15, r28	; 21
 17a:	b5 df       	rcall	.-150    	; 0xe6 <lcd_strobe_lcd_e>
 17c:	80 e8       	ldi	r24, 0x80	; 128
 17e:	85 bb       	out	0x15, r24	; 21
 180:	b2 df       	rcall	.-156    	; 0xe6 <lcd_strobe_lcd_e>
 182:	15 ba       	out	0x15, r1	; 21
 184:	b0 df       	rcall	.-160    	; 0xe6 <lcd_strobe_lcd_e>
 186:	80 ef       	ldi	r24, 0xF0	; 240
 188:	85 bb       	out	0x15, r24	; 21
 18a:	ad df       	rcall	.-166    	; 0xe6 <lcd_strobe_lcd_e>
 18c:	15 ba       	out	0x15, r1	; 21
 18e:	ab df       	rcall	.-170    	; 0xe6 <lcd_strobe_lcd_e>
 190:	80 e6       	ldi	r24, 0x60	; 96
 192:	85 bb       	out	0x15, r24	; 21
 194:	a8 df       	rcall	.-176    	; 0xe6 <lcd_strobe_lcd_e>
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	c9 df       	rcall	.-110    	; 0x12c <lcd_write_command>
 19a:	a5 df       	rcall	.-182    	; 0xe6 <lcd_strobe_lcd_e>
 19c:	cf 91       	pop	r28
 19e:	08 95       	ret

000001a0 <lcd_write_string>:
 1a0:	cf 93       	push	r28
 1a2:	df 93       	push	r29
 1a4:	ec 01       	movw	r28, r24
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <lcd_write_string+0xc>
 1a8:	b1 df       	rcall	.-158    	; 0x10c <lcd_write_character>
 1aa:	21 96       	adiw	r28, 0x01	; 1
 1ac:	88 81       	ld	r24, Y
 1ae:	81 11       	cpse	r24, r1
 1b0:	fb cf       	rjmp	.-10     	; 0x1a8 <lcd_write_string+0x8>
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <lcd_write_int>:
}

void lcd_write_int(int number)
{
 1b8:	af 92       	push	r10
 1ba:	bf 92       	push	r11
 1bc:	cf 92       	push	r12
 1be:	df 92       	push	r13
 1c0:	ef 92       	push	r14
 1c2:	ff 92       	push	r15
 1c4:	0f 93       	push	r16
 1c6:	1f 93       	push	r17
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	cd b7       	in	r28, 0x3d	; 61
 1ce:	de b7       	in	r29, 0x3e	; 62
 1d0:	d8 2e       	mov	r13, r24
 1d2:	c9 2e       	mov	r12, r25
	int length = snprintf(NULL, 0, "%d", number);
	char str[length + 1];
	snprintf(str, length + 1, "%d", number);
	lcd_write_string(str);
}
 1d4:	ad b6       	in	r10, 0x3d	; 61
 1d6:	be b6       	in	r11, 0x3e	; 62
	lcd_write_command(0x1E);
}

void lcd_write_int(int number)
{
	int length = snprintf(NULL, 0, "%d", number);
 1d8:	9f 93       	push	r25
 1da:	8f 93       	push	r24
 1dc:	0f 2e       	mov	r0, r31
 1de:	f3 e0       	ldi	r31, 0x03	; 3
 1e0:	ef 2e       	mov	r14, r31
 1e2:	f1 e0       	ldi	r31, 0x01	; 1
 1e4:	ff 2e       	mov	r15, r31
 1e6:	f0 2d       	mov	r31, r0
 1e8:	ff 92       	push	r15
 1ea:	ef 92       	push	r14
 1ec:	1f 92       	push	r1
 1ee:	1f 92       	push	r1
 1f0:	1f 92       	push	r1
 1f2:	1f 92       	push	r1
 1f4:	b1 d0       	rcall	.+354    	; 0x358 <snprintf>
	char str[length + 1];
 1f6:	01 96       	adiw	r24, 0x01	; 1
 1f8:	2d b7       	in	r18, 0x3d	; 61
 1fa:	3e b7       	in	r19, 0x3e	; 62
 1fc:	28 5f       	subi	r18, 0xF8	; 248
 1fe:	3f 4f       	sbci	r19, 0xFF	; 255
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	f8 94       	cli
 204:	3e bf       	out	0x3e, r19	; 62
 206:	0f be       	out	0x3f, r0	; 63
 208:	2d bf       	out	0x3d, r18	; 61
 20a:	28 1b       	sub	r18, r24
 20c:	39 0b       	sbc	r19, r25
 20e:	0f b6       	in	r0, 0x3f	; 63
 210:	f8 94       	cli
 212:	3e bf       	out	0x3e, r19	; 62
 214:	0f be       	out	0x3f, r0	; 63
 216:	2d bf       	out	0x3d, r18	; 61
 218:	0d b7       	in	r16, 0x3d	; 61
 21a:	1e b7       	in	r17, 0x3e	; 62
 21c:	0f 5f       	subi	r16, 0xFF	; 255
 21e:	1f 4f       	sbci	r17, 0xFF	; 255
	snprintf(str, length + 1, "%d", number);
 220:	cf 92       	push	r12
 222:	df 92       	push	r13
 224:	ff 92       	push	r15
 226:	ef 92       	push	r14
 228:	9f 93       	push	r25
 22a:	8f 93       	push	r24
 22c:	1f 93       	push	r17
 22e:	0f 93       	push	r16
 230:	93 d0       	rcall	.+294    	; 0x358 <snprintf>
	lcd_write_string(str);
 232:	80 2f       	mov	r24, r16
 234:	91 2f       	mov	r25, r17
 236:	b4 df       	rcall	.-152    	; 0x1a0 <lcd_write_string>
}
 238:	8d b7       	in	r24, 0x3d	; 61
 23a:	9e b7       	in	r25, 0x3e	; 62
 23c:	08 96       	adiw	r24, 0x08	; 8
 23e:	0f b6       	in	r0, 0x3f	; 63
 240:	f8 94       	cli
 242:	9e bf       	out	0x3e, r25	; 62
 244:	0f be       	out	0x3f, r0	; 63
 246:	8d bf       	out	0x3d, r24	; 61
 248:	0f b6       	in	r0, 0x3f	; 63
 24a:	f8 94       	cli
 24c:	be be       	out	0x3e, r11	; 62
 24e:	0f be       	out	0x3f, r0	; 63
 250:	ad be       	out	0x3d, r10	; 61
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	1f 91       	pop	r17
 258:	0f 91       	pop	r16
 25a:	ff 90       	pop	r15
 25c:	ef 90       	pop	r14
 25e:	df 90       	pop	r13
 260:	cf 90       	pop	r12
 262:	bf 90       	pop	r11
 264:	af 90       	pop	r10
 266:	08 95       	ret

00000268 <wait_us>:

uint16_t timer_dist = 125; // time measured by timer;

void wait_us(unsigned int us)
{
	for(int i = 0; i < us; i++)
 268:	20 e0       	ldi	r18, 0x00	; 0
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	06 c0       	rjmp	.+12     	; 0x27a <wait_us+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 26e:	46 e0       	ldi	r20, 0x06	; 6
 270:	4a 95       	dec	r20
 272:	f1 f7       	brne	.-4      	; 0x270 <wait_us+0x8>
 274:	00 c0       	rjmp	.+0      	; 0x276 <wait_us+0xe>
 276:	2f 5f       	subi	r18, 0xFF	; 255
 278:	3f 4f       	sbci	r19, 0xFF	; 255
 27a:	28 17       	cp	r18, r24
 27c:	39 07       	cpc	r19, r25
 27e:	b8 f3       	brcs	.-18     	; 0x26e <wait_us+0x6>
	{
		_delay_us(1);
	}
}
 280:	08 95       	ret

00000282 <wait_ms>:

void wait_ms(unsigned int ms)
{
	
	for(int i = 0; i < ms; i++)
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	08 c0       	rjmp	.+16     	; 0x298 <wait_ms+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 288:	e7 e8       	ldi	r30, 0x87	; 135
 28a:	f3 e1       	ldi	r31, 0x13	; 19
 28c:	31 97       	sbiw	r30, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <wait_ms+0xa>
 290:	00 c0       	rjmp	.+0      	; 0x292 <wait_ms+0x10>
 292:	00 00       	nop
 294:	2f 5f       	subi	r18, 0xFF	; 255
 296:	3f 4f       	sbci	r19, 0xFF	; 255
 298:	28 17       	cp	r18, r24
 29a:	39 07       	cpc	r19, r25
 29c:	a8 f3       	brcs	.-22     	; 0x288 <wait_ms+0x6>
	{
		_delay_ms(1);
	}
}
 29e:	08 95       	ret

000002a0 <ultrasonic_send_pulse>:

void ultrasonic_send_pulse()
{
 2a0:	cf 93       	push	r28
 2a2:	df 93       	push	r29
	PORTG = 0x00; // 10 us low pulse
 2a4:	c5 e6       	ldi	r28, 0x65	; 101
 2a6:	d0 e0       	ldi	r29, 0x00	; 0
 2a8:	18 82       	st	Y, r1
	wait_us(10);
 2aa:	8a e0       	ldi	r24, 0x0A	; 10
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	dc df       	rcall	.-72     	; 0x268 <wait_us>
	PORTG = 0x01;
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	88 83       	st	Y, r24
}
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	08 95       	ret

000002ba <__vector_1>:

ISR(INT0_vect)
{
 2ba:	1f 92       	push	r1
 2bc:	0f 92       	push	r0
 2be:	0f b6       	in	r0, 0x3f	; 63
 2c0:	0f 92       	push	r0
 2c2:	11 24       	eor	r1, r1
 2c4:	8f 93       	push	r24
 2c6:	9f 93       	push	r25
	
	timer_dist = 2009;
 2c8:	89 ed       	ldi	r24, 0xD9	; 217
 2ca:	97 e0       	ldi	r25, 0x07	; 7
 2cc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2d0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	// if the interrupt was generated on a rising edge (start sending echo)
	if (int_stat == INTERRUPT_RISING)
 2d4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <int_stat>
 2d8:	81 30       	cpi	r24, 0x01	; 1
 2da:	41 f4       	brne	.+16     	; 0x2ec <__vector_1+0x32>
	{
		// set interrupt pin 0 on PORTD to falling edge
		EICRA = 0x02;
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
		
		// reset the time in timer1
		TCNT1 = 0x00;
 2e2:	1d bc       	out	0x2d, r1	; 45
 2e4:	1c bc       	out	0x2c, r1	; 44
		
		// set interrupt status
		int_stat = INTERRUPT_FALLING;
 2e6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <int_stat>
 2ea:	0c c0       	rjmp	.+24     	; 0x304 <__vector_1+0x4a>
	} else 
	// else if it was generated on a falling edge (end sending echo)
	{
		// set interrupt pin 0 on PORTD to rising edge
		EICRA = 0x03;
 2ec:	83 e0       	ldi	r24, 0x03	; 3
 2ee:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
		
		// read timer1 into time_dist
		timer_dist = TCNT1;
 2f2:	8c b5       	in	r24, 0x2c	; 44
 2f4:	9d b5       	in	r25, 0x2d	; 45
 2f6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2fa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		
		// set interrupt status
		int_stat = INTERRUPT_RISING;
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <int_stat>
	}
	
}
 304:	9f 91       	pop	r25
 306:	8f 91       	pop	r24
 308:	0f 90       	pop	r0
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	0f 90       	pop	r0
 30e:	1f 90       	pop	r1
 310:	18 95       	reti

00000312 <main>:


int main(void)
{
	DDRG = 0xFF; // port g all output. pin 0 is trig, the rest is for debug
 312:	8f ef       	ldi	r24, 0xFF	; 255
 314:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	DDRD = 0x00; // port D pin 0 on input. 0 is echo and also interrupt
 318:	11 ba       	out	0x11, r1	; 17
	
	EICRA |= 0x03; // interrupt PORTD on pin 0, rising edge
 31a:	ea e6       	ldi	r30, 0x6A	; 106
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	80 81       	ld	r24, Z
 320:	83 60       	ori	r24, 0x03	; 3
 322:	80 83       	st	Z, r24
	
	EIMSK |= 0x01; // enable interrupt on pin 0 (INT0)
 324:	89 b7       	in	r24, 0x39	; 57
 326:	81 60       	ori	r24, 0x01	; 1
 328:	89 bf       	out	0x39, r24	; 57
	
	TCCR1A = 0b00000000; // initialize timer1, prescaler=256
 32a:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0b00001100; // CTC compare A, RUN
 32c:	8c e0       	ldi	r24, 0x0C	; 12
 32e:	8e bd       	out	0x2e, r24	; 46
	
	
	sei(); // turn on interrupt system
 330:	78 94       	sei
	
	init_4bits_mode();
 332:	17 df       	rcall	.-466    	; 0x162 <init_4bits_mode>
 334:	8f e4       	ldi	r24, 0x4F	; 79
 336:	93 ec       	ldi	r25, 0xC3	; 195
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <main+0x26>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <main+0x2c>
	
	_delay_ms(10);
	
	lcd_clear();
 33e:	00 00       	nop


    /* Replace with your application code */
    while (1) 
    {
		ultrasonic_send_pulse();
 340:	05 df       	rcall	.-502    	; 0x14c <lcd_clear>
 342:	ae df       	rcall	.-164    	; 0x2a0 <ultrasonic_send_pulse>
		
		int distance = timer_dist * 340 / 2;
		lcd_clear();
 344:	03 df       	rcall	.-506    	; 0x14c <lcd_clear>
 346:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
		lcd_write_int(timer_dist);
 34a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 34e:	34 df       	rcall	.-408    	; 0x1b8 <lcd_write_int>
		
		
		wait_ms(1000);
 350:	88 ee       	ldi	r24, 0xE8	; 232
 352:	93 e0       	ldi	r25, 0x03	; 3
 354:	96 df       	rcall	.-212    	; 0x282 <wait_ms>
 356:	f5 cf       	rjmp	.-22     	; 0x342 <main+0x30>

00000358 <snprintf>:
 358:	0f 93       	push	r16
 35a:	1f 93       	push	r17
 35c:	cf 93       	push	r28
 35e:	df 93       	push	r29
 360:	cd b7       	in	r28, 0x3d	; 61
 362:	de b7       	in	r29, 0x3e	; 62
 364:	2e 97       	sbiw	r28, 0x0e	; 14
 366:	0f b6       	in	r0, 0x3f	; 63
 368:	f8 94       	cli
 36a:	de bf       	out	0x3e, r29	; 62
 36c:	0f be       	out	0x3f, r0	; 63
 36e:	cd bf       	out	0x3d, r28	; 61
 370:	0d 89       	ldd	r16, Y+21	; 0x15
 372:	1e 89       	ldd	r17, Y+22	; 0x16
 374:	8f 89       	ldd	r24, Y+23	; 0x17
 376:	98 8d       	ldd	r25, Y+24	; 0x18
 378:	26 e0       	ldi	r18, 0x06	; 6
 37a:	2c 83       	std	Y+4, r18	; 0x04
 37c:	1a 83       	std	Y+2, r17	; 0x02
 37e:	09 83       	std	Y+1, r16	; 0x01
 380:	97 ff       	sbrs	r25, 7
 382:	02 c0       	rjmp	.+4      	; 0x388 <snprintf+0x30>
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	90 e8       	ldi	r25, 0x80	; 128
 388:	01 97       	sbiw	r24, 0x01	; 1
 38a:	9e 83       	std	Y+6, r25	; 0x06
 38c:	8d 83       	std	Y+5, r24	; 0x05
 38e:	ae 01       	movw	r20, r28
 390:	45 5e       	subi	r20, 0xE5	; 229
 392:	5f 4f       	sbci	r21, 0xFF	; 255
 394:	69 8d       	ldd	r22, Y+25	; 0x19
 396:	7a 8d       	ldd	r23, Y+26	; 0x1a
 398:	ce 01       	movw	r24, r28
 39a:	01 96       	adiw	r24, 0x01	; 1
 39c:	19 d0       	rcall	.+50     	; 0x3d0 <vfprintf>
 39e:	4d 81       	ldd	r20, Y+5	; 0x05
 3a0:	5e 81       	ldd	r21, Y+6	; 0x06
 3a2:	57 fd       	sbrc	r21, 7
 3a4:	0a c0       	rjmp	.+20     	; 0x3ba <snprintf+0x62>
 3a6:	2f 81       	ldd	r18, Y+7	; 0x07
 3a8:	38 85       	ldd	r19, Y+8	; 0x08
 3aa:	42 17       	cp	r20, r18
 3ac:	53 07       	cpc	r21, r19
 3ae:	0c f4       	brge	.+2      	; 0x3b2 <snprintf+0x5a>
 3b0:	9a 01       	movw	r18, r20
 3b2:	f8 01       	movw	r30, r16
 3b4:	e2 0f       	add	r30, r18
 3b6:	f3 1f       	adc	r31, r19
 3b8:	10 82       	st	Z, r1
 3ba:	2e 96       	adiw	r28, 0x0e	; 14
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	f8 94       	cli
 3c0:	de bf       	out	0x3e, r29	; 62
 3c2:	0f be       	out	0x3f, r0	; 63
 3c4:	cd bf       	out	0x3d, r28	; 61
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	1f 91       	pop	r17
 3cc:	0f 91       	pop	r16
 3ce:	08 95       	ret

000003d0 <vfprintf>:
 3d0:	2f 92       	push	r2
 3d2:	3f 92       	push	r3
 3d4:	4f 92       	push	r4
 3d6:	5f 92       	push	r5
 3d8:	6f 92       	push	r6
 3da:	7f 92       	push	r7
 3dc:	8f 92       	push	r8
 3de:	9f 92       	push	r9
 3e0:	af 92       	push	r10
 3e2:	bf 92       	push	r11
 3e4:	cf 92       	push	r12
 3e6:	df 92       	push	r13
 3e8:	ef 92       	push	r14
 3ea:	ff 92       	push	r15
 3ec:	0f 93       	push	r16
 3ee:	1f 93       	push	r17
 3f0:	cf 93       	push	r28
 3f2:	df 93       	push	r29
 3f4:	cd b7       	in	r28, 0x3d	; 61
 3f6:	de b7       	in	r29, 0x3e	; 62
 3f8:	2b 97       	sbiw	r28, 0x0b	; 11
 3fa:	0f b6       	in	r0, 0x3f	; 63
 3fc:	f8 94       	cli
 3fe:	de bf       	out	0x3e, r29	; 62
 400:	0f be       	out	0x3f, r0	; 63
 402:	cd bf       	out	0x3d, r28	; 61
 404:	6c 01       	movw	r12, r24
 406:	7b 01       	movw	r14, r22
 408:	8a 01       	movw	r16, r20
 40a:	fc 01       	movw	r30, r24
 40c:	17 82       	std	Z+7, r1	; 0x07
 40e:	16 82       	std	Z+6, r1	; 0x06
 410:	83 81       	ldd	r24, Z+3	; 0x03
 412:	81 ff       	sbrs	r24, 1
 414:	bf c1       	rjmp	.+894    	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
 416:	ce 01       	movw	r24, r28
 418:	01 96       	adiw	r24, 0x01	; 1
 41a:	3c 01       	movw	r6, r24
 41c:	f6 01       	movw	r30, r12
 41e:	93 81       	ldd	r25, Z+3	; 0x03
 420:	f7 01       	movw	r30, r14
 422:	93 fd       	sbrc	r25, 3
 424:	85 91       	lpm	r24, Z+
 426:	93 ff       	sbrs	r25, 3
 428:	81 91       	ld	r24, Z+
 42a:	7f 01       	movw	r14, r30
 42c:	88 23       	and	r24, r24
 42e:	09 f4       	brne	.+2      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 430:	ad c1       	rjmp	.+858    	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 432:	85 32       	cpi	r24, 0x25	; 37
 434:	39 f4       	brne	.+14     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 436:	93 fd       	sbrc	r25, 3
 438:	85 91       	lpm	r24, Z+
 43a:	93 ff       	sbrs	r25, 3
 43c:	81 91       	ld	r24, Z+
 43e:	7f 01       	movw	r14, r30
 440:	85 32       	cpi	r24, 0x25	; 37
 442:	21 f4       	brne	.+8      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 444:	b6 01       	movw	r22, r12
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	d6 d1       	rcall	.+940    	; 0x7f6 <fputc>
 44a:	e8 cf       	rjmp	.-48     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 44c:	91 2c       	mov	r9, r1
 44e:	21 2c       	mov	r2, r1
 450:	31 2c       	mov	r3, r1
 452:	ff e1       	ldi	r31, 0x1F	; 31
 454:	f3 15       	cp	r31, r3
 456:	d8 f0       	brcs	.+54     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 458:	8b 32       	cpi	r24, 0x2B	; 43
 45a:	79 f0       	breq	.+30     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 45c:	38 f4       	brcc	.+14     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 45e:	80 32       	cpi	r24, 0x20	; 32
 460:	79 f0       	breq	.+30     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 462:	83 32       	cpi	r24, 0x23	; 35
 464:	a1 f4       	brne	.+40     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 466:	23 2d       	mov	r18, r3
 468:	20 61       	ori	r18, 0x10	; 16
 46a:	1d c0       	rjmp	.+58     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 46c:	8d 32       	cpi	r24, 0x2D	; 45
 46e:	61 f0       	breq	.+24     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 470:	80 33       	cpi	r24, 0x30	; 48
 472:	69 f4       	brne	.+26     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 474:	23 2d       	mov	r18, r3
 476:	21 60       	ori	r18, 0x01	; 1
 478:	16 c0       	rjmp	.+44     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 47a:	83 2d       	mov	r24, r3
 47c:	82 60       	ori	r24, 0x02	; 2
 47e:	38 2e       	mov	r3, r24
 480:	e3 2d       	mov	r30, r3
 482:	e4 60       	ori	r30, 0x04	; 4
 484:	3e 2e       	mov	r3, r30
 486:	2a c0       	rjmp	.+84     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 488:	f3 2d       	mov	r31, r3
 48a:	f8 60       	ori	r31, 0x08	; 8
 48c:	1d c0       	rjmp	.+58     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 48e:	37 fc       	sbrc	r3, 7
 490:	2d c0       	rjmp	.+90     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 492:	20 ed       	ldi	r18, 0xD0	; 208
 494:	28 0f       	add	r18, r24
 496:	2a 30       	cpi	r18, 0x0A	; 10
 498:	40 f0       	brcs	.+16     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 49a:	8e 32       	cpi	r24, 0x2E	; 46
 49c:	b9 f4       	brne	.+46     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 49e:	36 fc       	sbrc	r3, 6
 4a0:	75 c1       	rjmp	.+746    	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 4a2:	23 2d       	mov	r18, r3
 4a4:	20 64       	ori	r18, 0x40	; 64
 4a6:	32 2e       	mov	r3, r18
 4a8:	19 c0       	rjmp	.+50     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4aa:	36 fe       	sbrs	r3, 6
 4ac:	06 c0       	rjmp	.+12     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4ae:	8a e0       	ldi	r24, 0x0A	; 10
 4b0:	98 9e       	mul	r9, r24
 4b2:	20 0d       	add	r18, r0
 4b4:	11 24       	eor	r1, r1
 4b6:	92 2e       	mov	r9, r18
 4b8:	11 c0       	rjmp	.+34     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4ba:	ea e0       	ldi	r30, 0x0A	; 10
 4bc:	2e 9e       	mul	r2, r30
 4be:	20 0d       	add	r18, r0
 4c0:	11 24       	eor	r1, r1
 4c2:	22 2e       	mov	r2, r18
 4c4:	f3 2d       	mov	r31, r3
 4c6:	f0 62       	ori	r31, 0x20	; 32
 4c8:	3f 2e       	mov	r3, r31
 4ca:	08 c0       	rjmp	.+16     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4cc:	8c 36       	cpi	r24, 0x6C	; 108
 4ce:	21 f4       	brne	.+8      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d0:	83 2d       	mov	r24, r3
 4d2:	80 68       	ori	r24, 0x80	; 128
 4d4:	38 2e       	mov	r3, r24
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d8:	88 36       	cpi	r24, 0x68	; 104
 4da:	41 f4       	brne	.+16     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4dc:	f7 01       	movw	r30, r14
 4de:	93 fd       	sbrc	r25, 3
 4e0:	85 91       	lpm	r24, Z+
 4e2:	93 ff       	sbrs	r25, 3
 4e4:	81 91       	ld	r24, Z+
 4e6:	7f 01       	movw	r14, r30
 4e8:	81 11       	cpse	r24, r1
 4ea:	b3 cf       	rjmp	.-154    	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 4ec:	98 2f       	mov	r25, r24
 4ee:	9f 7d       	andi	r25, 0xDF	; 223
 4f0:	95 54       	subi	r25, 0x45	; 69
 4f2:	93 30       	cpi	r25, 0x03	; 3
 4f4:	28 f4       	brcc	.+10     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4f6:	0c 5f       	subi	r16, 0xFC	; 252
 4f8:	1f 4f       	sbci	r17, 0xFF	; 255
 4fa:	9f e3       	ldi	r25, 0x3F	; 63
 4fc:	99 83       	std	Y+1, r25	; 0x01
 4fe:	0d c0       	rjmp	.+26     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 500:	83 36       	cpi	r24, 0x63	; 99
 502:	31 f0       	breq	.+12     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 504:	83 37       	cpi	r24, 0x73	; 115
 506:	71 f0       	breq	.+28     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 508:	83 35       	cpi	r24, 0x53	; 83
 50a:	09 f0       	breq	.+2      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 50c:	55 c0       	rjmp	.+170    	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 50e:	20 c0       	rjmp	.+64     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 510:	f8 01       	movw	r30, r16
 512:	80 81       	ld	r24, Z
 514:	89 83       	std	Y+1, r24	; 0x01
 516:	0e 5f       	subi	r16, 0xFE	; 254
 518:	1f 4f       	sbci	r17, 0xFF	; 255
 51a:	88 24       	eor	r8, r8
 51c:	83 94       	inc	r8
 51e:	91 2c       	mov	r9, r1
 520:	53 01       	movw	r10, r6
 522:	12 c0       	rjmp	.+36     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 524:	28 01       	movw	r4, r16
 526:	f2 e0       	ldi	r31, 0x02	; 2
 528:	4f 0e       	add	r4, r31
 52a:	51 1c       	adc	r5, r1
 52c:	f8 01       	movw	r30, r16
 52e:	a0 80       	ld	r10, Z
 530:	b1 80       	ldd	r11, Z+1	; 0x01
 532:	36 fe       	sbrs	r3, 6
 534:	03 c0       	rjmp	.+6      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 536:	69 2d       	mov	r22, r9
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53c:	6f ef       	ldi	r22, 0xFF	; 255
 53e:	7f ef       	ldi	r23, 0xFF	; 255
 540:	c5 01       	movw	r24, r10
 542:	4e d1       	rcall	.+668    	; 0x7e0 <strnlen>
 544:	4c 01       	movw	r8, r24
 546:	82 01       	movw	r16, r4
 548:	f3 2d       	mov	r31, r3
 54a:	ff 77       	andi	r31, 0x7F	; 127
 54c:	3f 2e       	mov	r3, r31
 54e:	15 c0       	rjmp	.+42     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 550:	28 01       	movw	r4, r16
 552:	22 e0       	ldi	r18, 0x02	; 2
 554:	42 0e       	add	r4, r18
 556:	51 1c       	adc	r5, r1
 558:	f8 01       	movw	r30, r16
 55a:	a0 80       	ld	r10, Z
 55c:	b1 80       	ldd	r11, Z+1	; 0x01
 55e:	36 fe       	sbrs	r3, 6
 560:	03 c0       	rjmp	.+6      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 562:	69 2d       	mov	r22, r9
 564:	70 e0       	ldi	r23, 0x00	; 0
 566:	02 c0       	rjmp	.+4      	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 568:	6f ef       	ldi	r22, 0xFF	; 255
 56a:	7f ef       	ldi	r23, 0xFF	; 255
 56c:	c5 01       	movw	r24, r10
 56e:	2d d1       	rcall	.+602    	; 0x7ca <strnlen_P>
 570:	4c 01       	movw	r8, r24
 572:	f3 2d       	mov	r31, r3
 574:	f0 68       	ori	r31, 0x80	; 128
 576:	3f 2e       	mov	r3, r31
 578:	82 01       	movw	r16, r4
 57a:	33 fc       	sbrc	r3, 3
 57c:	19 c0       	rjmp	.+50     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 57e:	82 2d       	mov	r24, r2
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	88 16       	cp	r8, r24
 584:	99 06       	cpc	r9, r25
 586:	a0 f4       	brcc	.+40     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 588:	b6 01       	movw	r22, r12
 58a:	80 e2       	ldi	r24, 0x20	; 32
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	33 d1       	rcall	.+614    	; 0x7f6 <fputc>
 590:	2a 94       	dec	r2
 592:	f5 cf       	rjmp	.-22     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 594:	f5 01       	movw	r30, r10
 596:	37 fc       	sbrc	r3, 7
 598:	85 91       	lpm	r24, Z+
 59a:	37 fe       	sbrs	r3, 7
 59c:	81 91       	ld	r24, Z+
 59e:	5f 01       	movw	r10, r30
 5a0:	b6 01       	movw	r22, r12
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	28 d1       	rcall	.+592    	; 0x7f6 <fputc>
 5a6:	21 10       	cpse	r2, r1
 5a8:	2a 94       	dec	r2
 5aa:	21 e0       	ldi	r18, 0x01	; 1
 5ac:	82 1a       	sub	r8, r18
 5ae:	91 08       	sbc	r9, r1
 5b0:	81 14       	cp	r8, r1
 5b2:	91 04       	cpc	r9, r1
 5b4:	79 f7       	brne	.-34     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 5b6:	e1 c0       	rjmp	.+450    	; 0x77a <__LOCK_REGION_LENGTH__+0x37a>
 5b8:	84 36       	cpi	r24, 0x64	; 100
 5ba:	11 f0       	breq	.+4      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5bc:	89 36       	cpi	r24, 0x69	; 105
 5be:	39 f5       	brne	.+78     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5c0:	f8 01       	movw	r30, r16
 5c2:	37 fe       	sbrs	r3, 7
 5c4:	07 c0       	rjmp	.+14     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5c6:	60 81       	ld	r22, Z
 5c8:	71 81       	ldd	r23, Z+1	; 0x01
 5ca:	82 81       	ldd	r24, Z+2	; 0x02
 5cc:	93 81       	ldd	r25, Z+3	; 0x03
 5ce:	0c 5f       	subi	r16, 0xFC	; 252
 5d0:	1f 4f       	sbci	r17, 0xFF	; 255
 5d2:	08 c0       	rjmp	.+16     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d4:	60 81       	ld	r22, Z
 5d6:	71 81       	ldd	r23, Z+1	; 0x01
 5d8:	07 2e       	mov	r0, r23
 5da:	00 0c       	add	r0, r0
 5dc:	88 0b       	sbc	r24, r24
 5de:	99 0b       	sbc	r25, r25
 5e0:	0e 5f       	subi	r16, 0xFE	; 254
 5e2:	1f 4f       	sbci	r17, 0xFF	; 255
 5e4:	f3 2d       	mov	r31, r3
 5e6:	ff 76       	andi	r31, 0x6F	; 111
 5e8:	3f 2e       	mov	r3, r31
 5ea:	97 ff       	sbrs	r25, 7
 5ec:	09 c0       	rjmp	.+18     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5ee:	90 95       	com	r25
 5f0:	80 95       	com	r24
 5f2:	70 95       	com	r23
 5f4:	61 95       	neg	r22
 5f6:	7f 4f       	sbci	r23, 0xFF	; 255
 5f8:	8f 4f       	sbci	r24, 0xFF	; 255
 5fa:	9f 4f       	sbci	r25, 0xFF	; 255
 5fc:	f0 68       	ori	r31, 0x80	; 128
 5fe:	3f 2e       	mov	r3, r31
 600:	2a e0       	ldi	r18, 0x0A	; 10
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	a3 01       	movw	r20, r6
 606:	33 d1       	rcall	.+614    	; 0x86e <__ultoa_invert>
 608:	88 2e       	mov	r8, r24
 60a:	86 18       	sub	r8, r6
 60c:	44 c0       	rjmp	.+136    	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 60e:	85 37       	cpi	r24, 0x75	; 117
 610:	31 f4       	brne	.+12     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 612:	23 2d       	mov	r18, r3
 614:	2f 7e       	andi	r18, 0xEF	; 239
 616:	b2 2e       	mov	r11, r18
 618:	2a e0       	ldi	r18, 0x0A	; 10
 61a:	30 e0       	ldi	r19, 0x00	; 0
 61c:	25 c0       	rjmp	.+74     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 61e:	93 2d       	mov	r25, r3
 620:	99 7f       	andi	r25, 0xF9	; 249
 622:	b9 2e       	mov	r11, r25
 624:	8f 36       	cpi	r24, 0x6F	; 111
 626:	c1 f0       	breq	.+48     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 628:	18 f4       	brcc	.+6      	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 62a:	88 35       	cpi	r24, 0x58	; 88
 62c:	79 f0       	breq	.+30     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 62e:	ae c0       	rjmp	.+348    	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 630:	80 37       	cpi	r24, 0x70	; 112
 632:	19 f0       	breq	.+6      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 634:	88 37       	cpi	r24, 0x78	; 120
 636:	21 f0       	breq	.+8      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 638:	a9 c0       	rjmp	.+338    	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 63a:	e9 2f       	mov	r30, r25
 63c:	e0 61       	ori	r30, 0x10	; 16
 63e:	be 2e       	mov	r11, r30
 640:	b4 fe       	sbrs	r11, 4
 642:	0d c0       	rjmp	.+26     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 644:	fb 2d       	mov	r31, r11
 646:	f4 60       	ori	r31, 0x04	; 4
 648:	bf 2e       	mov	r11, r31
 64a:	09 c0       	rjmp	.+18     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 64c:	34 fe       	sbrs	r3, 4
 64e:	0a c0       	rjmp	.+20     	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 650:	29 2f       	mov	r18, r25
 652:	26 60       	ori	r18, 0x06	; 6
 654:	b2 2e       	mov	r11, r18
 656:	06 c0       	rjmp	.+12     	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 658:	28 e0       	ldi	r18, 0x08	; 8
 65a:	30 e0       	ldi	r19, 0x00	; 0
 65c:	05 c0       	rjmp	.+10     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 65e:	20 e1       	ldi	r18, 0x10	; 16
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	02 c0       	rjmp	.+4      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 664:	20 e1       	ldi	r18, 0x10	; 16
 666:	32 e0       	ldi	r19, 0x02	; 2
 668:	f8 01       	movw	r30, r16
 66a:	b7 fe       	sbrs	r11, 7
 66c:	07 c0       	rjmp	.+14     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 66e:	60 81       	ld	r22, Z
 670:	71 81       	ldd	r23, Z+1	; 0x01
 672:	82 81       	ldd	r24, Z+2	; 0x02
 674:	93 81       	ldd	r25, Z+3	; 0x03
 676:	0c 5f       	subi	r16, 0xFC	; 252
 678:	1f 4f       	sbci	r17, 0xFF	; 255
 67a:	06 c0       	rjmp	.+12     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 67c:	60 81       	ld	r22, Z
 67e:	71 81       	ldd	r23, Z+1	; 0x01
 680:	80 e0       	ldi	r24, 0x00	; 0
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	0e 5f       	subi	r16, 0xFE	; 254
 686:	1f 4f       	sbci	r17, 0xFF	; 255
 688:	a3 01       	movw	r20, r6
 68a:	f1 d0       	rcall	.+482    	; 0x86e <__ultoa_invert>
 68c:	88 2e       	mov	r8, r24
 68e:	86 18       	sub	r8, r6
 690:	fb 2d       	mov	r31, r11
 692:	ff 77       	andi	r31, 0x7F	; 127
 694:	3f 2e       	mov	r3, r31
 696:	36 fe       	sbrs	r3, 6
 698:	0d c0       	rjmp	.+26     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 69a:	23 2d       	mov	r18, r3
 69c:	2e 7f       	andi	r18, 0xFE	; 254
 69e:	a2 2e       	mov	r10, r18
 6a0:	89 14       	cp	r8, r9
 6a2:	58 f4       	brcc	.+22     	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6a4:	34 fe       	sbrs	r3, 4
 6a6:	0b c0       	rjmp	.+22     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6a8:	32 fc       	sbrc	r3, 2
 6aa:	09 c0       	rjmp	.+18     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6ac:	83 2d       	mov	r24, r3
 6ae:	8e 7e       	andi	r24, 0xEE	; 238
 6b0:	a8 2e       	mov	r10, r24
 6b2:	05 c0       	rjmp	.+10     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6b4:	b8 2c       	mov	r11, r8
 6b6:	a3 2c       	mov	r10, r3
 6b8:	03 c0       	rjmp	.+6      	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 6ba:	b8 2c       	mov	r11, r8
 6bc:	01 c0       	rjmp	.+2      	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 6be:	b9 2c       	mov	r11, r9
 6c0:	a4 fe       	sbrs	r10, 4
 6c2:	0f c0       	rjmp	.+30     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6c4:	fe 01       	movw	r30, r28
 6c6:	e8 0d       	add	r30, r8
 6c8:	f1 1d       	adc	r31, r1
 6ca:	80 81       	ld	r24, Z
 6cc:	80 33       	cpi	r24, 0x30	; 48
 6ce:	21 f4       	brne	.+8      	; 0x6d8 <__LOCK_REGION_LENGTH__+0x2d8>
 6d0:	9a 2d       	mov	r25, r10
 6d2:	99 7e       	andi	r25, 0xE9	; 233
 6d4:	a9 2e       	mov	r10, r25
 6d6:	09 c0       	rjmp	.+18     	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6d8:	a2 fe       	sbrs	r10, 2
 6da:	06 c0       	rjmp	.+12     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6dc:	b3 94       	inc	r11
 6de:	b3 94       	inc	r11
 6e0:	04 c0       	rjmp	.+8      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e2:	8a 2d       	mov	r24, r10
 6e4:	86 78       	andi	r24, 0x86	; 134
 6e6:	09 f0       	breq	.+2      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e8:	b3 94       	inc	r11
 6ea:	a3 fc       	sbrc	r10, 3
 6ec:	10 c0       	rjmp	.+32     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 6ee:	a0 fe       	sbrs	r10, 0
 6f0:	06 c0       	rjmp	.+12     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6f2:	b2 14       	cp	r11, r2
 6f4:	80 f4       	brcc	.+32     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 6f6:	28 0c       	add	r2, r8
 6f8:	92 2c       	mov	r9, r2
 6fa:	9b 18       	sub	r9, r11
 6fc:	0d c0       	rjmp	.+26     	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
 6fe:	b2 14       	cp	r11, r2
 700:	58 f4       	brcc	.+22     	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
 702:	b6 01       	movw	r22, r12
 704:	80 e2       	ldi	r24, 0x20	; 32
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	76 d0       	rcall	.+236    	; 0x7f6 <fputc>
 70a:	b3 94       	inc	r11
 70c:	f8 cf       	rjmp	.-16     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 70e:	b2 14       	cp	r11, r2
 710:	18 f4       	brcc	.+6      	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
 712:	2b 18       	sub	r2, r11
 714:	02 c0       	rjmp	.+4      	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 716:	98 2c       	mov	r9, r8
 718:	21 2c       	mov	r2, r1
 71a:	a4 fe       	sbrs	r10, 4
 71c:	0f c0       	rjmp	.+30     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 71e:	b6 01       	movw	r22, r12
 720:	80 e3       	ldi	r24, 0x30	; 48
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	68 d0       	rcall	.+208    	; 0x7f6 <fputc>
 726:	a2 fe       	sbrs	r10, 2
 728:	16 c0       	rjmp	.+44     	; 0x756 <__LOCK_REGION_LENGTH__+0x356>
 72a:	a1 fc       	sbrc	r10, 1
 72c:	03 c0       	rjmp	.+6      	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 72e:	88 e7       	ldi	r24, 0x78	; 120
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	02 c0       	rjmp	.+4      	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 734:	88 e5       	ldi	r24, 0x58	; 88
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	b6 01       	movw	r22, r12
 73a:	0c c0       	rjmp	.+24     	; 0x754 <__LOCK_REGION_LENGTH__+0x354>
 73c:	8a 2d       	mov	r24, r10
 73e:	86 78       	andi	r24, 0x86	; 134
 740:	51 f0       	breq	.+20     	; 0x756 <__LOCK_REGION_LENGTH__+0x356>
 742:	a1 fe       	sbrs	r10, 1
 744:	02 c0       	rjmp	.+4      	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 746:	8b e2       	ldi	r24, 0x2B	; 43
 748:	01 c0       	rjmp	.+2      	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 74a:	80 e2       	ldi	r24, 0x20	; 32
 74c:	a7 fc       	sbrc	r10, 7
 74e:	8d e2       	ldi	r24, 0x2D	; 45
 750:	b6 01       	movw	r22, r12
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	50 d0       	rcall	.+160    	; 0x7f6 <fputc>
 756:	89 14       	cp	r8, r9
 758:	30 f4       	brcc	.+12     	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 75a:	b6 01       	movw	r22, r12
 75c:	80 e3       	ldi	r24, 0x30	; 48
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	4a d0       	rcall	.+148    	; 0x7f6 <fputc>
 762:	9a 94       	dec	r9
 764:	f8 cf       	rjmp	.-16     	; 0x756 <__LOCK_REGION_LENGTH__+0x356>
 766:	8a 94       	dec	r8
 768:	f3 01       	movw	r30, r6
 76a:	e8 0d       	add	r30, r8
 76c:	f1 1d       	adc	r31, r1
 76e:	80 81       	ld	r24, Z
 770:	b6 01       	movw	r22, r12
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	40 d0       	rcall	.+128    	; 0x7f6 <fputc>
 776:	81 10       	cpse	r8, r1
 778:	f6 cf       	rjmp	.-20     	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 77a:	22 20       	and	r2, r2
 77c:	09 f4       	brne	.+2      	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 77e:	4e ce       	rjmp	.-868    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 780:	b6 01       	movw	r22, r12
 782:	80 e2       	ldi	r24, 0x20	; 32
 784:	90 e0       	ldi	r25, 0x00	; 0
 786:	37 d0       	rcall	.+110    	; 0x7f6 <fputc>
 788:	2a 94       	dec	r2
 78a:	f7 cf       	rjmp	.-18     	; 0x77a <__LOCK_REGION_LENGTH__+0x37a>
 78c:	f6 01       	movw	r30, r12
 78e:	86 81       	ldd	r24, Z+6	; 0x06
 790:	97 81       	ldd	r25, Z+7	; 0x07
 792:	02 c0       	rjmp	.+4      	; 0x798 <__LOCK_REGION_LENGTH__+0x398>
 794:	8f ef       	ldi	r24, 0xFF	; 255
 796:	9f ef       	ldi	r25, 0xFF	; 255
 798:	2b 96       	adiw	r28, 0x0b	; 11
 79a:	0f b6       	in	r0, 0x3f	; 63
 79c:	f8 94       	cli
 79e:	de bf       	out	0x3e, r29	; 62
 7a0:	0f be       	out	0x3f, r0	; 63
 7a2:	cd bf       	out	0x3d, r28	; 61
 7a4:	df 91       	pop	r29
 7a6:	cf 91       	pop	r28
 7a8:	1f 91       	pop	r17
 7aa:	0f 91       	pop	r16
 7ac:	ff 90       	pop	r15
 7ae:	ef 90       	pop	r14
 7b0:	df 90       	pop	r13
 7b2:	cf 90       	pop	r12
 7b4:	bf 90       	pop	r11
 7b6:	af 90       	pop	r10
 7b8:	9f 90       	pop	r9
 7ba:	8f 90       	pop	r8
 7bc:	7f 90       	pop	r7
 7be:	6f 90       	pop	r6
 7c0:	5f 90       	pop	r5
 7c2:	4f 90       	pop	r4
 7c4:	3f 90       	pop	r3
 7c6:	2f 90       	pop	r2
 7c8:	08 95       	ret

000007ca <strnlen_P>:
 7ca:	fc 01       	movw	r30, r24
 7cc:	05 90       	lpm	r0, Z+
 7ce:	61 50       	subi	r22, 0x01	; 1
 7d0:	70 40       	sbci	r23, 0x00	; 0
 7d2:	01 10       	cpse	r0, r1
 7d4:	d8 f7       	brcc	.-10     	; 0x7cc <strnlen_P+0x2>
 7d6:	80 95       	com	r24
 7d8:	90 95       	com	r25
 7da:	8e 0f       	add	r24, r30
 7dc:	9f 1f       	adc	r25, r31
 7de:	08 95       	ret

000007e0 <strnlen>:
 7e0:	fc 01       	movw	r30, r24
 7e2:	61 50       	subi	r22, 0x01	; 1
 7e4:	70 40       	sbci	r23, 0x00	; 0
 7e6:	01 90       	ld	r0, Z+
 7e8:	01 10       	cpse	r0, r1
 7ea:	d8 f7       	brcc	.-10     	; 0x7e2 <strnlen+0x2>
 7ec:	80 95       	com	r24
 7ee:	90 95       	com	r25
 7f0:	8e 0f       	add	r24, r30
 7f2:	9f 1f       	adc	r25, r31
 7f4:	08 95       	ret

000007f6 <fputc>:
 7f6:	0f 93       	push	r16
 7f8:	1f 93       	push	r17
 7fa:	cf 93       	push	r28
 7fc:	df 93       	push	r29
 7fe:	fb 01       	movw	r30, r22
 800:	23 81       	ldd	r18, Z+3	; 0x03
 802:	21 fd       	sbrc	r18, 1
 804:	03 c0       	rjmp	.+6      	; 0x80c <fputc+0x16>
 806:	8f ef       	ldi	r24, 0xFF	; 255
 808:	9f ef       	ldi	r25, 0xFF	; 255
 80a:	2c c0       	rjmp	.+88     	; 0x864 <fputc+0x6e>
 80c:	22 ff       	sbrs	r18, 2
 80e:	16 c0       	rjmp	.+44     	; 0x83c <fputc+0x46>
 810:	46 81       	ldd	r20, Z+6	; 0x06
 812:	57 81       	ldd	r21, Z+7	; 0x07
 814:	24 81       	ldd	r18, Z+4	; 0x04
 816:	35 81       	ldd	r19, Z+5	; 0x05
 818:	42 17       	cp	r20, r18
 81a:	53 07       	cpc	r21, r19
 81c:	44 f4       	brge	.+16     	; 0x82e <fputc+0x38>
 81e:	a0 81       	ld	r26, Z
 820:	b1 81       	ldd	r27, Z+1	; 0x01
 822:	9d 01       	movw	r18, r26
 824:	2f 5f       	subi	r18, 0xFF	; 255
 826:	3f 4f       	sbci	r19, 0xFF	; 255
 828:	31 83       	std	Z+1, r19	; 0x01
 82a:	20 83       	st	Z, r18
 82c:	8c 93       	st	X, r24
 82e:	26 81       	ldd	r18, Z+6	; 0x06
 830:	37 81       	ldd	r19, Z+7	; 0x07
 832:	2f 5f       	subi	r18, 0xFF	; 255
 834:	3f 4f       	sbci	r19, 0xFF	; 255
 836:	37 83       	std	Z+7, r19	; 0x07
 838:	26 83       	std	Z+6, r18	; 0x06
 83a:	14 c0       	rjmp	.+40     	; 0x864 <fputc+0x6e>
 83c:	8b 01       	movw	r16, r22
 83e:	ec 01       	movw	r28, r24
 840:	fb 01       	movw	r30, r22
 842:	00 84       	ldd	r0, Z+8	; 0x08
 844:	f1 85       	ldd	r31, Z+9	; 0x09
 846:	e0 2d       	mov	r30, r0
 848:	09 95       	icall
 84a:	89 2b       	or	r24, r25
 84c:	e1 f6       	brne	.-72     	; 0x806 <fputc+0x10>
 84e:	d8 01       	movw	r26, r16
 850:	16 96       	adiw	r26, 0x06	; 6
 852:	8d 91       	ld	r24, X+
 854:	9c 91       	ld	r25, X
 856:	17 97       	sbiw	r26, 0x07	; 7
 858:	01 96       	adiw	r24, 0x01	; 1
 85a:	17 96       	adiw	r26, 0x07	; 7
 85c:	9c 93       	st	X, r25
 85e:	8e 93       	st	-X, r24
 860:	16 97       	sbiw	r26, 0x06	; 6
 862:	ce 01       	movw	r24, r28
 864:	df 91       	pop	r29
 866:	cf 91       	pop	r28
 868:	1f 91       	pop	r17
 86a:	0f 91       	pop	r16
 86c:	08 95       	ret

0000086e <__ultoa_invert>:
 86e:	fa 01       	movw	r30, r20
 870:	aa 27       	eor	r26, r26
 872:	28 30       	cpi	r18, 0x08	; 8
 874:	51 f1       	breq	.+84     	; 0x8ca <__ultoa_invert+0x5c>
 876:	20 31       	cpi	r18, 0x10	; 16
 878:	81 f1       	breq	.+96     	; 0x8da <__ultoa_invert+0x6c>
 87a:	e8 94       	clt
 87c:	6f 93       	push	r22
 87e:	6e 7f       	andi	r22, 0xFE	; 254
 880:	6e 5f       	subi	r22, 0xFE	; 254
 882:	7f 4f       	sbci	r23, 0xFF	; 255
 884:	8f 4f       	sbci	r24, 0xFF	; 255
 886:	9f 4f       	sbci	r25, 0xFF	; 255
 888:	af 4f       	sbci	r26, 0xFF	; 255
 88a:	b1 e0       	ldi	r27, 0x01	; 1
 88c:	3e d0       	rcall	.+124    	; 0x90a <__ultoa_invert+0x9c>
 88e:	b4 e0       	ldi	r27, 0x04	; 4
 890:	3c d0       	rcall	.+120    	; 0x90a <__ultoa_invert+0x9c>
 892:	67 0f       	add	r22, r23
 894:	78 1f       	adc	r23, r24
 896:	89 1f       	adc	r24, r25
 898:	9a 1f       	adc	r25, r26
 89a:	a1 1d       	adc	r26, r1
 89c:	68 0f       	add	r22, r24
 89e:	79 1f       	adc	r23, r25
 8a0:	8a 1f       	adc	r24, r26
 8a2:	91 1d       	adc	r25, r1
 8a4:	a1 1d       	adc	r26, r1
 8a6:	6a 0f       	add	r22, r26
 8a8:	71 1d       	adc	r23, r1
 8aa:	81 1d       	adc	r24, r1
 8ac:	91 1d       	adc	r25, r1
 8ae:	a1 1d       	adc	r26, r1
 8b0:	20 d0       	rcall	.+64     	; 0x8f2 <__ultoa_invert+0x84>
 8b2:	09 f4       	brne	.+2      	; 0x8b6 <__ultoa_invert+0x48>
 8b4:	68 94       	set
 8b6:	3f 91       	pop	r19
 8b8:	2a e0       	ldi	r18, 0x0A	; 10
 8ba:	26 9f       	mul	r18, r22
 8bc:	11 24       	eor	r1, r1
 8be:	30 19       	sub	r19, r0
 8c0:	30 5d       	subi	r19, 0xD0	; 208
 8c2:	31 93       	st	Z+, r19
 8c4:	de f6       	brtc	.-74     	; 0x87c <__ultoa_invert+0xe>
 8c6:	cf 01       	movw	r24, r30
 8c8:	08 95       	ret
 8ca:	46 2f       	mov	r20, r22
 8cc:	47 70       	andi	r20, 0x07	; 7
 8ce:	40 5d       	subi	r20, 0xD0	; 208
 8d0:	41 93       	st	Z+, r20
 8d2:	b3 e0       	ldi	r27, 0x03	; 3
 8d4:	0f d0       	rcall	.+30     	; 0x8f4 <__ultoa_invert+0x86>
 8d6:	c9 f7       	brne	.-14     	; 0x8ca <__ultoa_invert+0x5c>
 8d8:	f6 cf       	rjmp	.-20     	; 0x8c6 <__ultoa_invert+0x58>
 8da:	46 2f       	mov	r20, r22
 8dc:	4f 70       	andi	r20, 0x0F	; 15
 8de:	40 5d       	subi	r20, 0xD0	; 208
 8e0:	4a 33       	cpi	r20, 0x3A	; 58
 8e2:	18 f0       	brcs	.+6      	; 0x8ea <__ultoa_invert+0x7c>
 8e4:	49 5d       	subi	r20, 0xD9	; 217
 8e6:	31 fd       	sbrc	r19, 1
 8e8:	40 52       	subi	r20, 0x20	; 32
 8ea:	41 93       	st	Z+, r20
 8ec:	02 d0       	rcall	.+4      	; 0x8f2 <__ultoa_invert+0x84>
 8ee:	a9 f7       	brne	.-22     	; 0x8da <__ultoa_invert+0x6c>
 8f0:	ea cf       	rjmp	.-44     	; 0x8c6 <__ultoa_invert+0x58>
 8f2:	b4 e0       	ldi	r27, 0x04	; 4
 8f4:	a6 95       	lsr	r26
 8f6:	97 95       	ror	r25
 8f8:	87 95       	ror	r24
 8fa:	77 95       	ror	r23
 8fc:	67 95       	ror	r22
 8fe:	ba 95       	dec	r27
 900:	c9 f7       	brne	.-14     	; 0x8f4 <__ultoa_invert+0x86>
 902:	00 97       	sbiw	r24, 0x00	; 0
 904:	61 05       	cpc	r22, r1
 906:	71 05       	cpc	r23, r1
 908:	08 95       	ret
 90a:	9b 01       	movw	r18, r22
 90c:	ac 01       	movw	r20, r24
 90e:	0a 2e       	mov	r0, r26
 910:	06 94       	lsr	r0
 912:	57 95       	ror	r21
 914:	47 95       	ror	r20
 916:	37 95       	ror	r19
 918:	27 95       	ror	r18
 91a:	ba 95       	dec	r27
 91c:	c9 f7       	brne	.-14     	; 0x910 <__ultoa_invert+0xa2>
 91e:	62 0f       	add	r22, r18
 920:	73 1f       	adc	r23, r19
 922:	84 1f       	adc	r24, r20
 924:	95 1f       	adc	r25, r21
 926:	a0 1d       	adc	r26, r0
 928:	08 95       	ret

0000092a <_exit>:
 92a:	f8 94       	cli

0000092c <__stop_program>:
 92c:	ff cf       	rjmp	.-2      	; 0x92c <__stop_program>
