
ultrasonicSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000928  0000099c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000928  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000009a2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a00  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  00000a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fc0  00000000  00000000  00000af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a99  00000000  00000000  00001ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000710  00000000  00000000  0000254d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001b4  00000000  00000000  00002c60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000059a  00000000  00000000  00002e14  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000049c  00000000  00000000  000033ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  0000384a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	59 c1       	rjmp	.+690    	; 0x2b8 <__vector_1>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e2       	ldi	r30, 0x28	; 40
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	2e d1       	rcall	.+604    	; 0x310 <main>
  b4:	37 c4       	rjmp	.+2158   	; 0x924 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <sbi_porta>:
	}
}

void lcd_move_right(void){
	
	lcd_write_command(0x1E);
  b8:	9b b3       	in	r25, 0x1b	; 27
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	30 e0       	ldi	r19, 0x00	; 0
  be:	02 c0       	rjmp	.+4      	; 0xc4 <sbi_porta+0xc>
  c0:	22 0f       	add	r18, r18
  c2:	33 1f       	adc	r19, r19
  c4:	8a 95       	dec	r24
  c6:	e2 f7       	brpl	.-8      	; 0xc0 <sbi_porta+0x8>
  c8:	29 2b       	or	r18, r25
  ca:	2b bb       	out	0x1b, r18	; 27
  cc:	08 95       	ret

000000ce <cbi_porta>:
  ce:	9b b3       	in	r25, 0x1b	; 27
  d0:	21 e0       	ldi	r18, 0x01	; 1
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	02 c0       	rjmp	.+4      	; 0xda <cbi_porta+0xc>
  d6:	22 0f       	add	r18, r18
  d8:	33 1f       	adc	r19, r19
  da:	8a 95       	dec	r24
  dc:	e2 f7       	brpl	.-8      	; 0xd6 <cbi_porta+0x8>
  de:	20 95       	com	r18
  e0:	29 23       	and	r18, r25
  e2:	2b bb       	out	0x1b, r18	; 27
  e4:	08 95       	ret

000000e6 <lcd_strobe_lcd_e>:
  e6:	86 e0       	ldi	r24, 0x06	; 6
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	e6 df       	rcall	.-52     	; 0xb8 <sbi_porta>
  ec:	83 ec       	ldi	r24, 0xC3	; 195
  ee:	99 e0       	ldi	r25, 0x09	; 9
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <lcd_strobe_lcd_e+0xa>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <lcd_strobe_lcd_e+0x10>
  f6:	00 00       	nop
  f8:	86 e0       	ldi	r24, 0x06	; 6
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	e8 df       	rcall	.-48     	; 0xce <cbi_porta>
  fe:	83 ec       	ldi	r24, 0xC3	; 195
 100:	99 e0       	ldi	r25, 0x09	; 9
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <lcd_strobe_lcd_e+0x1c>
 106:	00 c0       	rjmp	.+0      	; 0x108 <lcd_strobe_lcd_e+0x22>
 108:	00 00       	nop
 10a:	08 95       	ret

0000010c <lcd_write_character>:
 10c:	cf 93       	push	r28
 10e:	c8 2f       	mov	r28, r24
 110:	85 bb       	out	0x15, r24	; 21
 112:	84 e0       	ldi	r24, 0x04	; 4
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	d0 df       	rcall	.-96     	; 0xb8 <sbi_porta>
 118:	e6 df       	rcall	.-52     	; 0xe6 <lcd_strobe_lcd_e>
 11a:	c2 95       	swap	r28
 11c:	c0 7f       	andi	r28, 0xF0	; 240
 11e:	c5 bb       	out	0x15, r28	; 21
 120:	84 e0       	ldi	r24, 0x04	; 4
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	c9 df       	rcall	.-110    	; 0xb8 <sbi_porta>
 126:	df df       	rcall	.-66     	; 0xe6 <lcd_strobe_lcd_e>
 128:	cf 91       	pop	r28
 12a:	08 95       	ret

0000012c <lcd_write_command>:
 12c:	cf 93       	push	r28
 12e:	c8 2f       	mov	r28, r24
 130:	85 bb       	out	0x15, r24	; 21
 132:	84 e0       	ldi	r24, 0x04	; 4
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	cb df       	rcall	.-106    	; 0xce <cbi_porta>
 138:	d6 df       	rcall	.-84     	; 0xe6 <lcd_strobe_lcd_e>
 13a:	c2 95       	swap	r28
 13c:	c0 7f       	andi	r28, 0xF0	; 240
 13e:	c5 bb       	out	0x15, r28	; 21
 140:	84 e0       	ldi	r24, 0x04	; 4
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	c4 df       	rcall	.-120    	; 0xce <cbi_porta>
 146:	cf df       	rcall	.-98     	; 0xe6 <lcd_strobe_lcd_e>
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

0000014c <lcd_clear>:
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	ee df       	rcall	.-36     	; 0x12c <lcd_write_command>
 150:	87 e8       	ldi	r24, 0x87	; 135
 152:	93 e1       	ldi	r25, 0x13	; 19
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <lcd_clear+0x8>
 158:	00 c0       	rjmp	.+0      	; 0x15a <lcd_clear+0xe>
 15a:	00 00       	nop
 15c:	80 e8       	ldi	r24, 0x80	; 128
 15e:	e6 cf       	rjmp	.-52     	; 0x12c <lcd_write_command>
 160:	08 95       	ret

00000162 <init_4bits_mode>:
 162:	cf 93       	push	r28
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	84 bb       	out	0x14, r24	; 20
 168:	85 bb       	out	0x15, r24	; 21
 16a:	8a bb       	out	0x1a, r24	; 26
 16c:	15 ba       	out	0x15, r1	; 21
 16e:	1b ba       	out	0x1b, r1	; 27
 170:	c0 e2       	ldi	r28, 0x20	; 32
 172:	c5 bb       	out	0x15, r28	; 21
 174:	b8 df       	rcall	.-144    	; 0xe6 <lcd_strobe_lcd_e>
 176:	c5 bb       	out	0x15, r28	; 21
 178:	b6 df       	rcall	.-148    	; 0xe6 <lcd_strobe_lcd_e>
 17a:	80 e8       	ldi	r24, 0x80	; 128
 17c:	85 bb       	out	0x15, r24	; 21
 17e:	b3 df       	rcall	.-154    	; 0xe6 <lcd_strobe_lcd_e>
 180:	15 ba       	out	0x15, r1	; 21
 182:	b1 df       	rcall	.-158    	; 0xe6 <lcd_strobe_lcd_e>
 184:	80 ef       	ldi	r24, 0xF0	; 240
 186:	85 bb       	out	0x15, r24	; 21
 188:	ae df       	rcall	.-164    	; 0xe6 <lcd_strobe_lcd_e>
 18a:	15 ba       	out	0x15, r1	; 21
 18c:	ac df       	rcall	.-168    	; 0xe6 <lcd_strobe_lcd_e>
 18e:	80 e6       	ldi	r24, 0x60	; 96
 190:	85 bb       	out	0x15, r24	; 21
 192:	a9 df       	rcall	.-174    	; 0xe6 <lcd_strobe_lcd_e>
 194:	82 e0       	ldi	r24, 0x02	; 2
 196:	ca df       	rcall	.-108    	; 0x12c <lcd_write_command>
 198:	a6 df       	rcall	.-180    	; 0xe6 <lcd_strobe_lcd_e>
 19a:	cf 91       	pop	r28
 19c:	08 95       	ret

0000019e <lcd_write_string>:
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
 1a2:	ec 01       	movw	r28, r24
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <lcd_write_string+0xc>
 1a6:	b2 df       	rcall	.-156    	; 0x10c <lcd_write_character>
 1a8:	21 96       	adiw	r28, 0x01	; 1
 1aa:	88 81       	ld	r24, Y
 1ac:	81 11       	cpse	r24, r1
 1ae:	fb cf       	rjmp	.-10     	; 0x1a6 <lcd_write_string+0x8>
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	08 95       	ret

000001b6 <lcd_write_int>:
}

void lcd_write_int(int number)
{
 1b6:	af 92       	push	r10
 1b8:	bf 92       	push	r11
 1ba:	cf 92       	push	r12
 1bc:	df 92       	push	r13
 1be:	ef 92       	push	r14
 1c0:	ff 92       	push	r15
 1c2:	0f 93       	push	r16
 1c4:	1f 93       	push	r17
 1c6:	cf 93       	push	r28
 1c8:	df 93       	push	r29
 1ca:	cd b7       	in	r28, 0x3d	; 61
 1cc:	de b7       	in	r29, 0x3e	; 62
 1ce:	d8 2e       	mov	r13, r24
 1d0:	c9 2e       	mov	r12, r25
	int length = snprintf(NULL, 0, "%d", number);
	char str[length + 1];
	snprintf(str, length + 1, "%d", number);
	lcd_write_string(str);
}
 1d2:	ad b6       	in	r10, 0x3d	; 61
 1d4:	be b6       	in	r11, 0x3e	; 62
	lcd_write_command(0x1E);
}

void lcd_write_int(int number)
{
	int length = snprintf(NULL, 0, "%d", number);
 1d6:	9f 93       	push	r25
 1d8:	8f 93       	push	r24
 1da:	0f 2e       	mov	r0, r31
 1dc:	f3 e0       	ldi	r31, 0x03	; 3
 1de:	ef 2e       	mov	r14, r31
 1e0:	f1 e0       	ldi	r31, 0x01	; 1
 1e2:	ff 2e       	mov	r15, r31
 1e4:	f0 2d       	mov	r31, r0
 1e6:	ff 92       	push	r15
 1e8:	ef 92       	push	r14
 1ea:	1f 92       	push	r1
 1ec:	1f 92       	push	r1
 1ee:	1f 92       	push	r1
 1f0:	1f 92       	push	r1
 1f2:	af d0       	rcall	.+350    	; 0x352 <snprintf>
	char str[length + 1];
 1f4:	01 96       	adiw	r24, 0x01	; 1
 1f6:	2d b7       	in	r18, 0x3d	; 61
 1f8:	3e b7       	in	r19, 0x3e	; 62
 1fa:	28 5f       	subi	r18, 0xF8	; 248
 1fc:	3f 4f       	sbci	r19, 0xFF	; 255
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	f8 94       	cli
 202:	3e bf       	out	0x3e, r19	; 62
 204:	0f be       	out	0x3f, r0	; 63
 206:	2d bf       	out	0x3d, r18	; 61
 208:	28 1b       	sub	r18, r24
 20a:	39 0b       	sbc	r19, r25
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	f8 94       	cli
 210:	3e bf       	out	0x3e, r19	; 62
 212:	0f be       	out	0x3f, r0	; 63
 214:	2d bf       	out	0x3d, r18	; 61
 216:	0d b7       	in	r16, 0x3d	; 61
 218:	1e b7       	in	r17, 0x3e	; 62
 21a:	0f 5f       	subi	r16, 0xFF	; 255
 21c:	1f 4f       	sbci	r17, 0xFF	; 255
	snprintf(str, length + 1, "%d", number);
 21e:	cf 92       	push	r12
 220:	df 92       	push	r13
 222:	ff 92       	push	r15
 224:	ef 92       	push	r14
 226:	9f 93       	push	r25
 228:	8f 93       	push	r24
 22a:	1f 93       	push	r17
 22c:	0f 93       	push	r16
 22e:	91 d0       	rcall	.+290    	; 0x352 <snprintf>
	lcd_write_string(str);
 230:	80 2f       	mov	r24, r16
 232:	91 2f       	mov	r25, r17
 234:	b4 df       	rcall	.-152    	; 0x19e <lcd_write_string>
}
 236:	8d b7       	in	r24, 0x3d	; 61
 238:	9e b7       	in	r25, 0x3e	; 62
 23a:	08 96       	adiw	r24, 0x08	; 8
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	f8 94       	cli
 240:	9e bf       	out	0x3e, r25	; 62
 242:	0f be       	out	0x3f, r0	; 63
 244:	8d bf       	out	0x3d, r24	; 61
 246:	0f b6       	in	r0, 0x3f	; 63
 248:	f8 94       	cli
 24a:	be be       	out	0x3e, r11	; 62
 24c:	0f be       	out	0x3f, r0	; 63
 24e:	ad be       	out	0x3d, r10	; 61
 250:	df 91       	pop	r29
 252:	cf 91       	pop	r28
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	ff 90       	pop	r15
 25a:	ef 90       	pop	r14
 25c:	df 90       	pop	r13
 25e:	cf 90       	pop	r12
 260:	bf 90       	pop	r11
 262:	af 90       	pop	r10
 264:	08 95       	ret

00000266 <wait_us>:

uint16_t timer_dist = 125; // time measured by timer;

void wait_us(unsigned int us)
{
	for(int i = 0; i < us; i++)
 266:	20 e0       	ldi	r18, 0x00	; 0
 268:	30 e0       	ldi	r19, 0x00	; 0
 26a:	06 c0       	rjmp	.+12     	; 0x278 <wait_us+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 26c:	46 e0       	ldi	r20, 0x06	; 6
 26e:	4a 95       	dec	r20
 270:	f1 f7       	brne	.-4      	; 0x26e <wait_us+0x8>
 272:	00 c0       	rjmp	.+0      	; 0x274 <wait_us+0xe>
 274:	2f 5f       	subi	r18, 0xFF	; 255
 276:	3f 4f       	sbci	r19, 0xFF	; 255
 278:	28 17       	cp	r18, r24
 27a:	39 07       	cpc	r19, r25
 27c:	b8 f3       	brcs	.-18     	; 0x26c <wait_us+0x6>
	{
		_delay_us(1);
	}
}
 27e:	08 95       	ret

00000280 <wait_ms>:

void wait_ms(unsigned int ms)
{
	
	for(int i = 0; i < ms; i++)
 280:	20 e0       	ldi	r18, 0x00	; 0
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	08 c0       	rjmp	.+16     	; 0x296 <wait_ms+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 286:	e7 e8       	ldi	r30, 0x87	; 135
 288:	f3 e1       	ldi	r31, 0x13	; 19
 28a:	31 97       	sbiw	r30, 0x01	; 1
 28c:	f1 f7       	brne	.-4      	; 0x28a <wait_ms+0xa>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <wait_ms+0x10>
 290:	00 00       	nop
 292:	2f 5f       	subi	r18, 0xFF	; 255
 294:	3f 4f       	sbci	r19, 0xFF	; 255
 296:	28 17       	cp	r18, r24
 298:	39 07       	cpc	r19, r25
 29a:	a8 f3       	brcs	.-22     	; 0x286 <wait_ms+0x6>
	{
		_delay_ms(1);
	}
}
 29c:	08 95       	ret

0000029e <ultrasonic_send_pulse>:

void ultrasonic_send_pulse()
{
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
	PORTG = 0x00; // 10 us low pulse
 2a2:	c5 e6       	ldi	r28, 0x65	; 101
 2a4:	d0 e0       	ldi	r29, 0x00	; 0
 2a6:	18 82       	st	Y, r1
	wait_us(10);
 2a8:	8a e0       	ldi	r24, 0x0A	; 10
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	dc df       	rcall	.-72     	; 0x266 <wait_us>
	PORTG = 0x01;
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	88 83       	st	Y, r24
}
 2b2:	df 91       	pop	r29
 2b4:	cf 91       	pop	r28
 2b6:	08 95       	ret

000002b8 <__vector_1>:

ISR(INT0_vect)
{
 2b8:	1f 92       	push	r1
 2ba:	0f 92       	push	r0
 2bc:	0f b6       	in	r0, 0x3f	; 63
 2be:	0f 92       	push	r0
 2c0:	11 24       	eor	r1, r1
 2c2:	8f 93       	push	r24
 2c4:	9f 93       	push	r25
	
	timer_dist = 2009;
 2c6:	89 ed       	ldi	r24, 0xD9	; 217
 2c8:	97 e0       	ldi	r25, 0x07	; 7
 2ca:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2ce:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	// if the interrupt was generated on a rising edge (start sending echo)
	if (int_stat == INTERRUPT_RISING)
 2d2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <int_stat>
 2d6:	81 30       	cpi	r24, 0x01	; 1
 2d8:	41 f4       	brne	.+16     	; 0x2ea <__vector_1+0x32>
	{
		// set interrupt pin 0 on PORTD to falling edge
		EICRA = 0x02;
 2da:	82 e0       	ldi	r24, 0x02	; 2
 2dc:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
		
		// reset the time in timer1
		TCNT1 = 0x00;
 2e0:	1d bc       	out	0x2d, r1	; 45
 2e2:	1c bc       	out	0x2c, r1	; 44
		
		// set interrupt status
		int_stat = INTERRUPT_FALLING;
 2e4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <int_stat>
 2e8:	0c c0       	rjmp	.+24     	; 0x302 <__vector_1+0x4a>
	} else 
	// else if it was generated on a falling edge (end sending echo)
	{
		// set interrupt pin 0 on PORTD to rising edge
		EICRA = 0x03;
 2ea:	83 e0       	ldi	r24, 0x03	; 3
 2ec:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
		
		// read timer1 into time_dist
		timer_dist = TCNT1;
 2f0:	8c b5       	in	r24, 0x2c	; 44
 2f2:	9d b5       	in	r25, 0x2d	; 45
 2f4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2f8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		
		// set interrupt status
		int_stat = INTERRUPT_RISING;
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <int_stat>
	}
	
}
 302:	9f 91       	pop	r25
 304:	8f 91       	pop	r24
 306:	0f 90       	pop	r0
 308:	0f be       	out	0x3f, r0	; 63
 30a:	0f 90       	pop	r0
 30c:	1f 90       	pop	r1
 30e:	18 95       	reti

00000310 <main>:


int main(void)
{
	DDRG = 0xFF; // port g all output. pin 0 is trig, the rest is for debug
 310:	8f ef       	ldi	r24, 0xFF	; 255
 312:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	DDRD = 0x00; // port D pin 0 on input. 0 is echo and also interrupt
 316:	11 ba       	out	0x11, r1	; 17
	
	EICRA = 0x03; // interrupt PORTD on pin 0, rising edge
 318:	83 e0       	ldi	r24, 0x03	; 3
 31a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	
	EIMSK |= 0x01; // enable interrupt on pin 0 (INT0)
 31e:	89 b7       	in	r24, 0x39	; 57
 320:	81 60       	ori	r24, 0x01	; 1
 322:	89 bf       	out	0x39, r24	; 57
	
	TCCR1A = 0b00000000; // initialize timer1, prescaler=256
 324:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0b00001100; // CTC compare A, RUN
 326:	8c e0       	ldi	r24, 0x0C	; 12
 328:	8e bd       	out	0x2e, r24	; 46
	
	
	sei(); // turn on interrupt system
 32a:	78 94       	sei
	
	init_4bits_mode();
 32c:	1a df       	rcall	.-460    	; 0x162 <init_4bits_mode>
 32e:	8f e4       	ldi	r24, 0x4F	; 79
 330:	93 ec       	ldi	r25, 0xC3	; 195
 332:	01 97       	sbiw	r24, 0x01	; 1
 334:	f1 f7       	brne	.-4      	; 0x332 <main+0x22>
 336:	00 c0       	rjmp	.+0      	; 0x338 <main+0x28>
	
	_delay_ms(10);
	
	lcd_clear();
 338:	00 00       	nop


    while (1) 
    {
		ultrasonic_send_pulse();
 33a:	08 df       	rcall	.-496    	; 0x14c <lcd_clear>
 33c:	b0 df       	rcall	.-160    	; 0x29e <ultrasonic_send_pulse>
		
		int distance = timer_dist * 340 / 2;
		lcd_clear();
 33e:	06 df       	rcall	.-500    	; 0x14c <lcd_clear>
 340:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
		lcd_write_int(timer_dist);
 344:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 348:	36 df       	rcall	.-404    	; 0x1b6 <lcd_write_int>
		
		
		wait_ms(100);
 34a:	84 e6       	ldi	r24, 0x64	; 100
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	98 df       	rcall	.-208    	; 0x280 <wait_ms>
 350:	f5 cf       	rjmp	.-22     	; 0x33c <main+0x2c>

00000352 <snprintf>:
 352:	0f 93       	push	r16
 354:	1f 93       	push	r17
 356:	cf 93       	push	r28
 358:	df 93       	push	r29
 35a:	cd b7       	in	r28, 0x3d	; 61
 35c:	de b7       	in	r29, 0x3e	; 62
 35e:	2e 97       	sbiw	r28, 0x0e	; 14
 360:	0f b6       	in	r0, 0x3f	; 63
 362:	f8 94       	cli
 364:	de bf       	out	0x3e, r29	; 62
 366:	0f be       	out	0x3f, r0	; 63
 368:	cd bf       	out	0x3d, r28	; 61
 36a:	0d 89       	ldd	r16, Y+21	; 0x15
 36c:	1e 89       	ldd	r17, Y+22	; 0x16
 36e:	8f 89       	ldd	r24, Y+23	; 0x17
 370:	98 8d       	ldd	r25, Y+24	; 0x18
 372:	26 e0       	ldi	r18, 0x06	; 6
 374:	2c 83       	std	Y+4, r18	; 0x04
 376:	1a 83       	std	Y+2, r17	; 0x02
 378:	09 83       	std	Y+1, r16	; 0x01
 37a:	97 ff       	sbrs	r25, 7
 37c:	02 c0       	rjmp	.+4      	; 0x382 <snprintf+0x30>
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	90 e8       	ldi	r25, 0x80	; 128
 382:	01 97       	sbiw	r24, 0x01	; 1
 384:	9e 83       	std	Y+6, r25	; 0x06
 386:	8d 83       	std	Y+5, r24	; 0x05
 388:	ae 01       	movw	r20, r28
 38a:	45 5e       	subi	r20, 0xE5	; 229
 38c:	5f 4f       	sbci	r21, 0xFF	; 255
 38e:	69 8d       	ldd	r22, Y+25	; 0x19
 390:	7a 8d       	ldd	r23, Y+26	; 0x1a
 392:	ce 01       	movw	r24, r28
 394:	01 96       	adiw	r24, 0x01	; 1
 396:	19 d0       	rcall	.+50     	; 0x3ca <vfprintf>
 398:	4d 81       	ldd	r20, Y+5	; 0x05
 39a:	5e 81       	ldd	r21, Y+6	; 0x06
 39c:	57 fd       	sbrc	r21, 7
 39e:	0a c0       	rjmp	.+20     	; 0x3b4 <snprintf+0x62>
 3a0:	2f 81       	ldd	r18, Y+7	; 0x07
 3a2:	38 85       	ldd	r19, Y+8	; 0x08
 3a4:	42 17       	cp	r20, r18
 3a6:	53 07       	cpc	r21, r19
 3a8:	0c f4       	brge	.+2      	; 0x3ac <snprintf+0x5a>
 3aa:	9a 01       	movw	r18, r20
 3ac:	f8 01       	movw	r30, r16
 3ae:	e2 0f       	add	r30, r18
 3b0:	f3 1f       	adc	r31, r19
 3b2:	10 82       	st	Z, r1
 3b4:	2e 96       	adiw	r28, 0x0e	; 14
 3b6:	0f b6       	in	r0, 0x3f	; 63
 3b8:	f8 94       	cli
 3ba:	de bf       	out	0x3e, r29	; 62
 3bc:	0f be       	out	0x3f, r0	; 63
 3be:	cd bf       	out	0x3d, r28	; 61
 3c0:	df 91       	pop	r29
 3c2:	cf 91       	pop	r28
 3c4:	1f 91       	pop	r17
 3c6:	0f 91       	pop	r16
 3c8:	08 95       	ret

000003ca <vfprintf>:
 3ca:	2f 92       	push	r2
 3cc:	3f 92       	push	r3
 3ce:	4f 92       	push	r4
 3d0:	5f 92       	push	r5
 3d2:	6f 92       	push	r6
 3d4:	7f 92       	push	r7
 3d6:	8f 92       	push	r8
 3d8:	9f 92       	push	r9
 3da:	af 92       	push	r10
 3dc:	bf 92       	push	r11
 3de:	cf 92       	push	r12
 3e0:	df 92       	push	r13
 3e2:	ef 92       	push	r14
 3e4:	ff 92       	push	r15
 3e6:	0f 93       	push	r16
 3e8:	1f 93       	push	r17
 3ea:	cf 93       	push	r28
 3ec:	df 93       	push	r29
 3ee:	cd b7       	in	r28, 0x3d	; 61
 3f0:	de b7       	in	r29, 0x3e	; 62
 3f2:	2b 97       	sbiw	r28, 0x0b	; 11
 3f4:	0f b6       	in	r0, 0x3f	; 63
 3f6:	f8 94       	cli
 3f8:	de bf       	out	0x3e, r29	; 62
 3fa:	0f be       	out	0x3f, r0	; 63
 3fc:	cd bf       	out	0x3d, r28	; 61
 3fe:	6c 01       	movw	r12, r24
 400:	7b 01       	movw	r14, r22
 402:	8a 01       	movw	r16, r20
 404:	fc 01       	movw	r30, r24
 406:	17 82       	std	Z+7, r1	; 0x07
 408:	16 82       	std	Z+6, r1	; 0x06
 40a:	83 81       	ldd	r24, Z+3	; 0x03
 40c:	81 ff       	sbrs	r24, 1
 40e:	bf c1       	rjmp	.+894    	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
 410:	ce 01       	movw	r24, r28
 412:	01 96       	adiw	r24, 0x01	; 1
 414:	3c 01       	movw	r6, r24
 416:	f6 01       	movw	r30, r12
 418:	93 81       	ldd	r25, Z+3	; 0x03
 41a:	f7 01       	movw	r30, r14
 41c:	93 fd       	sbrc	r25, 3
 41e:	85 91       	lpm	r24, Z+
 420:	93 ff       	sbrs	r25, 3
 422:	81 91       	ld	r24, Z+
 424:	7f 01       	movw	r14, r30
 426:	88 23       	and	r24, r24
 428:	09 f4       	brne	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 42a:	ad c1       	rjmp	.+858    	; 0x786 <__LOCK_REGION_LENGTH__+0x386>
 42c:	85 32       	cpi	r24, 0x25	; 37
 42e:	39 f4       	brne	.+14     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 430:	93 fd       	sbrc	r25, 3
 432:	85 91       	lpm	r24, Z+
 434:	93 ff       	sbrs	r25, 3
 436:	81 91       	ld	r24, Z+
 438:	7f 01       	movw	r14, r30
 43a:	85 32       	cpi	r24, 0x25	; 37
 43c:	21 f4       	brne	.+8      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 43e:	b6 01       	movw	r22, r12
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	d6 d1       	rcall	.+940    	; 0x7f0 <fputc>
 444:	e8 cf       	rjmp	.-48     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 446:	91 2c       	mov	r9, r1
 448:	21 2c       	mov	r2, r1
 44a:	31 2c       	mov	r3, r1
 44c:	ff e1       	ldi	r31, 0x1F	; 31
 44e:	f3 15       	cp	r31, r3
 450:	d8 f0       	brcs	.+54     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 452:	8b 32       	cpi	r24, 0x2B	; 43
 454:	79 f0       	breq	.+30     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 456:	38 f4       	brcc	.+14     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 458:	80 32       	cpi	r24, 0x20	; 32
 45a:	79 f0       	breq	.+30     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 45c:	83 32       	cpi	r24, 0x23	; 35
 45e:	a1 f4       	brne	.+40     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 460:	23 2d       	mov	r18, r3
 462:	20 61       	ori	r18, 0x10	; 16
 464:	1d c0       	rjmp	.+58     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 466:	8d 32       	cpi	r24, 0x2D	; 45
 468:	61 f0       	breq	.+24     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 46a:	80 33       	cpi	r24, 0x30	; 48
 46c:	69 f4       	brne	.+26     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 46e:	23 2d       	mov	r18, r3
 470:	21 60       	ori	r18, 0x01	; 1
 472:	16 c0       	rjmp	.+44     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 474:	83 2d       	mov	r24, r3
 476:	82 60       	ori	r24, 0x02	; 2
 478:	38 2e       	mov	r3, r24
 47a:	e3 2d       	mov	r30, r3
 47c:	e4 60       	ori	r30, 0x04	; 4
 47e:	3e 2e       	mov	r3, r30
 480:	2a c0       	rjmp	.+84     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 482:	f3 2d       	mov	r31, r3
 484:	f8 60       	ori	r31, 0x08	; 8
 486:	1d c0       	rjmp	.+58     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 488:	37 fc       	sbrc	r3, 7
 48a:	2d c0       	rjmp	.+90     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 48c:	20 ed       	ldi	r18, 0xD0	; 208
 48e:	28 0f       	add	r18, r24
 490:	2a 30       	cpi	r18, 0x0A	; 10
 492:	40 f0       	brcs	.+16     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 494:	8e 32       	cpi	r24, 0x2E	; 46
 496:	b9 f4       	brne	.+46     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 498:	36 fc       	sbrc	r3, 6
 49a:	75 c1       	rjmp	.+746    	; 0x786 <__LOCK_REGION_LENGTH__+0x386>
 49c:	23 2d       	mov	r18, r3
 49e:	20 64       	ori	r18, 0x40	; 64
 4a0:	32 2e       	mov	r3, r18
 4a2:	19 c0       	rjmp	.+50     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4a4:	36 fe       	sbrs	r3, 6
 4a6:	06 c0       	rjmp	.+12     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4a8:	8a e0       	ldi	r24, 0x0A	; 10
 4aa:	98 9e       	mul	r9, r24
 4ac:	20 0d       	add	r18, r0
 4ae:	11 24       	eor	r1, r1
 4b0:	92 2e       	mov	r9, r18
 4b2:	11 c0       	rjmp	.+34     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4b4:	ea e0       	ldi	r30, 0x0A	; 10
 4b6:	2e 9e       	mul	r2, r30
 4b8:	20 0d       	add	r18, r0
 4ba:	11 24       	eor	r1, r1
 4bc:	22 2e       	mov	r2, r18
 4be:	f3 2d       	mov	r31, r3
 4c0:	f0 62       	ori	r31, 0x20	; 32
 4c2:	3f 2e       	mov	r3, r31
 4c4:	08 c0       	rjmp	.+16     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4c6:	8c 36       	cpi	r24, 0x6C	; 108
 4c8:	21 f4       	brne	.+8      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4ca:	83 2d       	mov	r24, r3
 4cc:	80 68       	ori	r24, 0x80	; 128
 4ce:	38 2e       	mov	r3, r24
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4d2:	88 36       	cpi	r24, 0x68	; 104
 4d4:	41 f4       	brne	.+16     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4d6:	f7 01       	movw	r30, r14
 4d8:	93 fd       	sbrc	r25, 3
 4da:	85 91       	lpm	r24, Z+
 4dc:	93 ff       	sbrs	r25, 3
 4de:	81 91       	ld	r24, Z+
 4e0:	7f 01       	movw	r14, r30
 4e2:	81 11       	cpse	r24, r1
 4e4:	b3 cf       	rjmp	.-154    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 4e6:	98 2f       	mov	r25, r24
 4e8:	9f 7d       	andi	r25, 0xDF	; 223
 4ea:	95 54       	subi	r25, 0x45	; 69
 4ec:	93 30       	cpi	r25, 0x03	; 3
 4ee:	28 f4       	brcc	.+10     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f0:	0c 5f       	subi	r16, 0xFC	; 252
 4f2:	1f 4f       	sbci	r17, 0xFF	; 255
 4f4:	9f e3       	ldi	r25, 0x3F	; 63
 4f6:	99 83       	std	Y+1, r25	; 0x01
 4f8:	0d c0       	rjmp	.+26     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 4fa:	83 36       	cpi	r24, 0x63	; 99
 4fc:	31 f0       	breq	.+12     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4fe:	83 37       	cpi	r24, 0x73	; 115
 500:	71 f0       	breq	.+28     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 502:	83 35       	cpi	r24, 0x53	; 83
 504:	09 f0       	breq	.+2      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 506:	55 c0       	rjmp	.+170    	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 508:	20 c0       	rjmp	.+64     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 50a:	f8 01       	movw	r30, r16
 50c:	80 81       	ld	r24, Z
 50e:	89 83       	std	Y+1, r24	; 0x01
 510:	0e 5f       	subi	r16, 0xFE	; 254
 512:	1f 4f       	sbci	r17, 0xFF	; 255
 514:	88 24       	eor	r8, r8
 516:	83 94       	inc	r8
 518:	91 2c       	mov	r9, r1
 51a:	53 01       	movw	r10, r6
 51c:	12 c0       	rjmp	.+36     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 51e:	28 01       	movw	r4, r16
 520:	f2 e0       	ldi	r31, 0x02	; 2
 522:	4f 0e       	add	r4, r31
 524:	51 1c       	adc	r5, r1
 526:	f8 01       	movw	r30, r16
 528:	a0 80       	ld	r10, Z
 52a:	b1 80       	ldd	r11, Z+1	; 0x01
 52c:	36 fe       	sbrs	r3, 6
 52e:	03 c0       	rjmp	.+6      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 530:	69 2d       	mov	r22, r9
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 536:	6f ef       	ldi	r22, 0xFF	; 255
 538:	7f ef       	ldi	r23, 0xFF	; 255
 53a:	c5 01       	movw	r24, r10
 53c:	4e d1       	rcall	.+668    	; 0x7da <strnlen>
 53e:	4c 01       	movw	r8, r24
 540:	82 01       	movw	r16, r4
 542:	f3 2d       	mov	r31, r3
 544:	ff 77       	andi	r31, 0x7F	; 127
 546:	3f 2e       	mov	r3, r31
 548:	15 c0       	rjmp	.+42     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 54a:	28 01       	movw	r4, r16
 54c:	22 e0       	ldi	r18, 0x02	; 2
 54e:	42 0e       	add	r4, r18
 550:	51 1c       	adc	r5, r1
 552:	f8 01       	movw	r30, r16
 554:	a0 80       	ld	r10, Z
 556:	b1 80       	ldd	r11, Z+1	; 0x01
 558:	36 fe       	sbrs	r3, 6
 55a:	03 c0       	rjmp	.+6      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 55c:	69 2d       	mov	r22, r9
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	02 c0       	rjmp	.+4      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 562:	6f ef       	ldi	r22, 0xFF	; 255
 564:	7f ef       	ldi	r23, 0xFF	; 255
 566:	c5 01       	movw	r24, r10
 568:	2d d1       	rcall	.+602    	; 0x7c4 <strnlen_P>
 56a:	4c 01       	movw	r8, r24
 56c:	f3 2d       	mov	r31, r3
 56e:	f0 68       	ori	r31, 0x80	; 128
 570:	3f 2e       	mov	r3, r31
 572:	82 01       	movw	r16, r4
 574:	33 fc       	sbrc	r3, 3
 576:	19 c0       	rjmp	.+50     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 578:	82 2d       	mov	r24, r2
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	88 16       	cp	r8, r24
 57e:	99 06       	cpc	r9, r25
 580:	a0 f4       	brcc	.+40     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 582:	b6 01       	movw	r22, r12
 584:	80 e2       	ldi	r24, 0x20	; 32
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	33 d1       	rcall	.+614    	; 0x7f0 <fputc>
 58a:	2a 94       	dec	r2
 58c:	f5 cf       	rjmp	.-22     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 58e:	f5 01       	movw	r30, r10
 590:	37 fc       	sbrc	r3, 7
 592:	85 91       	lpm	r24, Z+
 594:	37 fe       	sbrs	r3, 7
 596:	81 91       	ld	r24, Z+
 598:	5f 01       	movw	r10, r30
 59a:	b6 01       	movw	r22, r12
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	28 d1       	rcall	.+592    	; 0x7f0 <fputc>
 5a0:	21 10       	cpse	r2, r1
 5a2:	2a 94       	dec	r2
 5a4:	21 e0       	ldi	r18, 0x01	; 1
 5a6:	82 1a       	sub	r8, r18
 5a8:	91 08       	sbc	r9, r1
 5aa:	81 14       	cp	r8, r1
 5ac:	91 04       	cpc	r9, r1
 5ae:	79 f7       	brne	.-34     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 5b0:	e1 c0       	rjmp	.+450    	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 5b2:	84 36       	cpi	r24, 0x64	; 100
 5b4:	11 f0       	breq	.+4      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5b6:	89 36       	cpi	r24, 0x69	; 105
 5b8:	39 f5       	brne	.+78     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5ba:	f8 01       	movw	r30, r16
 5bc:	37 fe       	sbrs	r3, 7
 5be:	07 c0       	rjmp	.+14     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5c0:	60 81       	ld	r22, Z
 5c2:	71 81       	ldd	r23, Z+1	; 0x01
 5c4:	82 81       	ldd	r24, Z+2	; 0x02
 5c6:	93 81       	ldd	r25, Z+3	; 0x03
 5c8:	0c 5f       	subi	r16, 0xFC	; 252
 5ca:	1f 4f       	sbci	r17, 0xFF	; 255
 5cc:	08 c0       	rjmp	.+16     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5ce:	60 81       	ld	r22, Z
 5d0:	71 81       	ldd	r23, Z+1	; 0x01
 5d2:	07 2e       	mov	r0, r23
 5d4:	00 0c       	add	r0, r0
 5d6:	88 0b       	sbc	r24, r24
 5d8:	99 0b       	sbc	r25, r25
 5da:	0e 5f       	subi	r16, 0xFE	; 254
 5dc:	1f 4f       	sbci	r17, 0xFF	; 255
 5de:	f3 2d       	mov	r31, r3
 5e0:	ff 76       	andi	r31, 0x6F	; 111
 5e2:	3f 2e       	mov	r3, r31
 5e4:	97 ff       	sbrs	r25, 7
 5e6:	09 c0       	rjmp	.+18     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5e8:	90 95       	com	r25
 5ea:	80 95       	com	r24
 5ec:	70 95       	com	r23
 5ee:	61 95       	neg	r22
 5f0:	7f 4f       	sbci	r23, 0xFF	; 255
 5f2:	8f 4f       	sbci	r24, 0xFF	; 255
 5f4:	9f 4f       	sbci	r25, 0xFF	; 255
 5f6:	f0 68       	ori	r31, 0x80	; 128
 5f8:	3f 2e       	mov	r3, r31
 5fa:	2a e0       	ldi	r18, 0x0A	; 10
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	a3 01       	movw	r20, r6
 600:	33 d1       	rcall	.+614    	; 0x868 <__ultoa_invert>
 602:	88 2e       	mov	r8, r24
 604:	86 18       	sub	r8, r6
 606:	44 c0       	rjmp	.+136    	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 608:	85 37       	cpi	r24, 0x75	; 117
 60a:	31 f4       	brne	.+12     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60c:	23 2d       	mov	r18, r3
 60e:	2f 7e       	andi	r18, 0xEF	; 239
 610:	b2 2e       	mov	r11, r18
 612:	2a e0       	ldi	r18, 0x0A	; 10
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	25 c0       	rjmp	.+74     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 618:	93 2d       	mov	r25, r3
 61a:	99 7f       	andi	r25, 0xF9	; 249
 61c:	b9 2e       	mov	r11, r25
 61e:	8f 36       	cpi	r24, 0x6F	; 111
 620:	c1 f0       	breq	.+48     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 622:	18 f4       	brcc	.+6      	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 624:	88 35       	cpi	r24, 0x58	; 88
 626:	79 f0       	breq	.+30     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 628:	ae c0       	rjmp	.+348    	; 0x786 <__LOCK_REGION_LENGTH__+0x386>
 62a:	80 37       	cpi	r24, 0x70	; 112
 62c:	19 f0       	breq	.+6      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 62e:	88 37       	cpi	r24, 0x78	; 120
 630:	21 f0       	breq	.+8      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 632:	a9 c0       	rjmp	.+338    	; 0x786 <__LOCK_REGION_LENGTH__+0x386>
 634:	e9 2f       	mov	r30, r25
 636:	e0 61       	ori	r30, 0x10	; 16
 638:	be 2e       	mov	r11, r30
 63a:	b4 fe       	sbrs	r11, 4
 63c:	0d c0       	rjmp	.+26     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 63e:	fb 2d       	mov	r31, r11
 640:	f4 60       	ori	r31, 0x04	; 4
 642:	bf 2e       	mov	r11, r31
 644:	09 c0       	rjmp	.+18     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 646:	34 fe       	sbrs	r3, 4
 648:	0a c0       	rjmp	.+20     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 64a:	29 2f       	mov	r18, r25
 64c:	26 60       	ori	r18, 0x06	; 6
 64e:	b2 2e       	mov	r11, r18
 650:	06 c0       	rjmp	.+12     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 652:	28 e0       	ldi	r18, 0x08	; 8
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	05 c0       	rjmp	.+10     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 658:	20 e1       	ldi	r18, 0x10	; 16
 65a:	30 e0       	ldi	r19, 0x00	; 0
 65c:	02 c0       	rjmp	.+4      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 65e:	20 e1       	ldi	r18, 0x10	; 16
 660:	32 e0       	ldi	r19, 0x02	; 2
 662:	f8 01       	movw	r30, r16
 664:	b7 fe       	sbrs	r11, 7
 666:	07 c0       	rjmp	.+14     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 668:	60 81       	ld	r22, Z
 66a:	71 81       	ldd	r23, Z+1	; 0x01
 66c:	82 81       	ldd	r24, Z+2	; 0x02
 66e:	93 81       	ldd	r25, Z+3	; 0x03
 670:	0c 5f       	subi	r16, 0xFC	; 252
 672:	1f 4f       	sbci	r17, 0xFF	; 255
 674:	06 c0       	rjmp	.+12     	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 676:	60 81       	ld	r22, Z
 678:	71 81       	ldd	r23, Z+1	; 0x01
 67a:	80 e0       	ldi	r24, 0x00	; 0
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	0e 5f       	subi	r16, 0xFE	; 254
 680:	1f 4f       	sbci	r17, 0xFF	; 255
 682:	a3 01       	movw	r20, r6
 684:	f1 d0       	rcall	.+482    	; 0x868 <__ultoa_invert>
 686:	88 2e       	mov	r8, r24
 688:	86 18       	sub	r8, r6
 68a:	fb 2d       	mov	r31, r11
 68c:	ff 77       	andi	r31, 0x7F	; 127
 68e:	3f 2e       	mov	r3, r31
 690:	36 fe       	sbrs	r3, 6
 692:	0d c0       	rjmp	.+26     	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 694:	23 2d       	mov	r18, r3
 696:	2e 7f       	andi	r18, 0xFE	; 254
 698:	a2 2e       	mov	r10, r18
 69a:	89 14       	cp	r8, r9
 69c:	58 f4       	brcc	.+22     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 69e:	34 fe       	sbrs	r3, 4
 6a0:	0b c0       	rjmp	.+22     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6a2:	32 fc       	sbrc	r3, 2
 6a4:	09 c0       	rjmp	.+18     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6a6:	83 2d       	mov	r24, r3
 6a8:	8e 7e       	andi	r24, 0xEE	; 238
 6aa:	a8 2e       	mov	r10, r24
 6ac:	05 c0       	rjmp	.+10     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6ae:	b8 2c       	mov	r11, r8
 6b0:	a3 2c       	mov	r10, r3
 6b2:	03 c0       	rjmp	.+6      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6b4:	b8 2c       	mov	r11, r8
 6b6:	01 c0       	rjmp	.+2      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6b8:	b9 2c       	mov	r11, r9
 6ba:	a4 fe       	sbrs	r10, 4
 6bc:	0f c0       	rjmp	.+30     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6be:	fe 01       	movw	r30, r28
 6c0:	e8 0d       	add	r30, r8
 6c2:	f1 1d       	adc	r31, r1
 6c4:	80 81       	ld	r24, Z
 6c6:	80 33       	cpi	r24, 0x30	; 48
 6c8:	21 f4       	brne	.+8      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6ca:	9a 2d       	mov	r25, r10
 6cc:	99 7e       	andi	r25, 0xE9	; 233
 6ce:	a9 2e       	mov	r10, r25
 6d0:	09 c0       	rjmp	.+18     	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6d2:	a2 fe       	sbrs	r10, 2
 6d4:	06 c0       	rjmp	.+12     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6d6:	b3 94       	inc	r11
 6d8:	b3 94       	inc	r11
 6da:	04 c0       	rjmp	.+8      	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6dc:	8a 2d       	mov	r24, r10
 6de:	86 78       	andi	r24, 0x86	; 134
 6e0:	09 f0       	breq	.+2      	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6e2:	b3 94       	inc	r11
 6e4:	a3 fc       	sbrc	r10, 3
 6e6:	10 c0       	rjmp	.+32     	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
 6e8:	a0 fe       	sbrs	r10, 0
 6ea:	06 c0       	rjmp	.+12     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6ec:	b2 14       	cp	r11, r2
 6ee:	80 f4       	brcc	.+32     	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
 6f0:	28 0c       	add	r2, r8
 6f2:	92 2c       	mov	r9, r2
 6f4:	9b 18       	sub	r9, r11
 6f6:	0d c0       	rjmp	.+26     	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 6f8:	b2 14       	cp	r11, r2
 6fa:	58 f4       	brcc	.+22     	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 6fc:	b6 01       	movw	r22, r12
 6fe:	80 e2       	ldi	r24, 0x20	; 32
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	76 d0       	rcall	.+236    	; 0x7f0 <fputc>
 704:	b3 94       	inc	r11
 706:	f8 cf       	rjmp	.-16     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 708:	b2 14       	cp	r11, r2
 70a:	18 f4       	brcc	.+6      	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 70c:	2b 18       	sub	r2, r11
 70e:	02 c0       	rjmp	.+4      	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 710:	98 2c       	mov	r9, r8
 712:	21 2c       	mov	r2, r1
 714:	a4 fe       	sbrs	r10, 4
 716:	0f c0       	rjmp	.+30     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 718:	b6 01       	movw	r22, r12
 71a:	80 e3       	ldi	r24, 0x30	; 48
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	68 d0       	rcall	.+208    	; 0x7f0 <fputc>
 720:	a2 fe       	sbrs	r10, 2
 722:	16 c0       	rjmp	.+44     	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 724:	a1 fc       	sbrc	r10, 1
 726:	03 c0       	rjmp	.+6      	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
 728:	88 e7       	ldi	r24, 0x78	; 120
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	02 c0       	rjmp	.+4      	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 72e:	88 e5       	ldi	r24, 0x58	; 88
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	b6 01       	movw	r22, r12
 734:	0c c0       	rjmp	.+24     	; 0x74e <__LOCK_REGION_LENGTH__+0x34e>
 736:	8a 2d       	mov	r24, r10
 738:	86 78       	andi	r24, 0x86	; 134
 73a:	51 f0       	breq	.+20     	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 73c:	a1 fe       	sbrs	r10, 1
 73e:	02 c0       	rjmp	.+4      	; 0x744 <__LOCK_REGION_LENGTH__+0x344>
 740:	8b e2       	ldi	r24, 0x2B	; 43
 742:	01 c0       	rjmp	.+2      	; 0x746 <__LOCK_REGION_LENGTH__+0x346>
 744:	80 e2       	ldi	r24, 0x20	; 32
 746:	a7 fc       	sbrc	r10, 7
 748:	8d e2       	ldi	r24, 0x2D	; 45
 74a:	b6 01       	movw	r22, r12
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	50 d0       	rcall	.+160    	; 0x7f0 <fputc>
 750:	89 14       	cp	r8, r9
 752:	30 f4       	brcc	.+12     	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 754:	b6 01       	movw	r22, r12
 756:	80 e3       	ldi	r24, 0x30	; 48
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	4a d0       	rcall	.+148    	; 0x7f0 <fputc>
 75c:	9a 94       	dec	r9
 75e:	f8 cf       	rjmp	.-16     	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 760:	8a 94       	dec	r8
 762:	f3 01       	movw	r30, r6
 764:	e8 0d       	add	r30, r8
 766:	f1 1d       	adc	r31, r1
 768:	80 81       	ld	r24, Z
 76a:	b6 01       	movw	r22, r12
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	40 d0       	rcall	.+128    	; 0x7f0 <fputc>
 770:	81 10       	cpse	r8, r1
 772:	f6 cf       	rjmp	.-20     	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 774:	22 20       	and	r2, r2
 776:	09 f4       	brne	.+2      	; 0x77a <__LOCK_REGION_LENGTH__+0x37a>
 778:	4e ce       	rjmp	.-868    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 77a:	b6 01       	movw	r22, r12
 77c:	80 e2       	ldi	r24, 0x20	; 32
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	37 d0       	rcall	.+110    	; 0x7f0 <fputc>
 782:	2a 94       	dec	r2
 784:	f7 cf       	rjmp	.-18     	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 786:	f6 01       	movw	r30, r12
 788:	86 81       	ldd	r24, Z+6	; 0x06
 78a:	97 81       	ldd	r25, Z+7	; 0x07
 78c:	02 c0       	rjmp	.+4      	; 0x792 <__LOCK_REGION_LENGTH__+0x392>
 78e:	8f ef       	ldi	r24, 0xFF	; 255
 790:	9f ef       	ldi	r25, 0xFF	; 255
 792:	2b 96       	adiw	r28, 0x0b	; 11
 794:	0f b6       	in	r0, 0x3f	; 63
 796:	f8 94       	cli
 798:	de bf       	out	0x3e, r29	; 62
 79a:	0f be       	out	0x3f, r0	; 63
 79c:	cd bf       	out	0x3d, r28	; 61
 79e:	df 91       	pop	r29
 7a0:	cf 91       	pop	r28
 7a2:	1f 91       	pop	r17
 7a4:	0f 91       	pop	r16
 7a6:	ff 90       	pop	r15
 7a8:	ef 90       	pop	r14
 7aa:	df 90       	pop	r13
 7ac:	cf 90       	pop	r12
 7ae:	bf 90       	pop	r11
 7b0:	af 90       	pop	r10
 7b2:	9f 90       	pop	r9
 7b4:	8f 90       	pop	r8
 7b6:	7f 90       	pop	r7
 7b8:	6f 90       	pop	r6
 7ba:	5f 90       	pop	r5
 7bc:	4f 90       	pop	r4
 7be:	3f 90       	pop	r3
 7c0:	2f 90       	pop	r2
 7c2:	08 95       	ret

000007c4 <strnlen_P>:
 7c4:	fc 01       	movw	r30, r24
 7c6:	05 90       	lpm	r0, Z+
 7c8:	61 50       	subi	r22, 0x01	; 1
 7ca:	70 40       	sbci	r23, 0x00	; 0
 7cc:	01 10       	cpse	r0, r1
 7ce:	d8 f7       	brcc	.-10     	; 0x7c6 <strnlen_P+0x2>
 7d0:	80 95       	com	r24
 7d2:	90 95       	com	r25
 7d4:	8e 0f       	add	r24, r30
 7d6:	9f 1f       	adc	r25, r31
 7d8:	08 95       	ret

000007da <strnlen>:
 7da:	fc 01       	movw	r30, r24
 7dc:	61 50       	subi	r22, 0x01	; 1
 7de:	70 40       	sbci	r23, 0x00	; 0
 7e0:	01 90       	ld	r0, Z+
 7e2:	01 10       	cpse	r0, r1
 7e4:	d8 f7       	brcc	.-10     	; 0x7dc <strnlen+0x2>
 7e6:	80 95       	com	r24
 7e8:	90 95       	com	r25
 7ea:	8e 0f       	add	r24, r30
 7ec:	9f 1f       	adc	r25, r31
 7ee:	08 95       	ret

000007f0 <fputc>:
 7f0:	0f 93       	push	r16
 7f2:	1f 93       	push	r17
 7f4:	cf 93       	push	r28
 7f6:	df 93       	push	r29
 7f8:	fb 01       	movw	r30, r22
 7fa:	23 81       	ldd	r18, Z+3	; 0x03
 7fc:	21 fd       	sbrc	r18, 1
 7fe:	03 c0       	rjmp	.+6      	; 0x806 <fputc+0x16>
 800:	8f ef       	ldi	r24, 0xFF	; 255
 802:	9f ef       	ldi	r25, 0xFF	; 255
 804:	2c c0       	rjmp	.+88     	; 0x85e <fputc+0x6e>
 806:	22 ff       	sbrs	r18, 2
 808:	16 c0       	rjmp	.+44     	; 0x836 <fputc+0x46>
 80a:	46 81       	ldd	r20, Z+6	; 0x06
 80c:	57 81       	ldd	r21, Z+7	; 0x07
 80e:	24 81       	ldd	r18, Z+4	; 0x04
 810:	35 81       	ldd	r19, Z+5	; 0x05
 812:	42 17       	cp	r20, r18
 814:	53 07       	cpc	r21, r19
 816:	44 f4       	brge	.+16     	; 0x828 <fputc+0x38>
 818:	a0 81       	ld	r26, Z
 81a:	b1 81       	ldd	r27, Z+1	; 0x01
 81c:	9d 01       	movw	r18, r26
 81e:	2f 5f       	subi	r18, 0xFF	; 255
 820:	3f 4f       	sbci	r19, 0xFF	; 255
 822:	31 83       	std	Z+1, r19	; 0x01
 824:	20 83       	st	Z, r18
 826:	8c 93       	st	X, r24
 828:	26 81       	ldd	r18, Z+6	; 0x06
 82a:	37 81       	ldd	r19, Z+7	; 0x07
 82c:	2f 5f       	subi	r18, 0xFF	; 255
 82e:	3f 4f       	sbci	r19, 0xFF	; 255
 830:	37 83       	std	Z+7, r19	; 0x07
 832:	26 83       	std	Z+6, r18	; 0x06
 834:	14 c0       	rjmp	.+40     	; 0x85e <fputc+0x6e>
 836:	8b 01       	movw	r16, r22
 838:	ec 01       	movw	r28, r24
 83a:	fb 01       	movw	r30, r22
 83c:	00 84       	ldd	r0, Z+8	; 0x08
 83e:	f1 85       	ldd	r31, Z+9	; 0x09
 840:	e0 2d       	mov	r30, r0
 842:	09 95       	icall
 844:	89 2b       	or	r24, r25
 846:	e1 f6       	brne	.-72     	; 0x800 <fputc+0x10>
 848:	d8 01       	movw	r26, r16
 84a:	16 96       	adiw	r26, 0x06	; 6
 84c:	8d 91       	ld	r24, X+
 84e:	9c 91       	ld	r25, X
 850:	17 97       	sbiw	r26, 0x07	; 7
 852:	01 96       	adiw	r24, 0x01	; 1
 854:	17 96       	adiw	r26, 0x07	; 7
 856:	9c 93       	st	X, r25
 858:	8e 93       	st	-X, r24
 85a:	16 97       	sbiw	r26, 0x06	; 6
 85c:	ce 01       	movw	r24, r28
 85e:	df 91       	pop	r29
 860:	cf 91       	pop	r28
 862:	1f 91       	pop	r17
 864:	0f 91       	pop	r16
 866:	08 95       	ret

00000868 <__ultoa_invert>:
 868:	fa 01       	movw	r30, r20
 86a:	aa 27       	eor	r26, r26
 86c:	28 30       	cpi	r18, 0x08	; 8
 86e:	51 f1       	breq	.+84     	; 0x8c4 <__ultoa_invert+0x5c>
 870:	20 31       	cpi	r18, 0x10	; 16
 872:	81 f1       	breq	.+96     	; 0x8d4 <__ultoa_invert+0x6c>
 874:	e8 94       	clt
 876:	6f 93       	push	r22
 878:	6e 7f       	andi	r22, 0xFE	; 254
 87a:	6e 5f       	subi	r22, 0xFE	; 254
 87c:	7f 4f       	sbci	r23, 0xFF	; 255
 87e:	8f 4f       	sbci	r24, 0xFF	; 255
 880:	9f 4f       	sbci	r25, 0xFF	; 255
 882:	af 4f       	sbci	r26, 0xFF	; 255
 884:	b1 e0       	ldi	r27, 0x01	; 1
 886:	3e d0       	rcall	.+124    	; 0x904 <__ultoa_invert+0x9c>
 888:	b4 e0       	ldi	r27, 0x04	; 4
 88a:	3c d0       	rcall	.+120    	; 0x904 <__ultoa_invert+0x9c>
 88c:	67 0f       	add	r22, r23
 88e:	78 1f       	adc	r23, r24
 890:	89 1f       	adc	r24, r25
 892:	9a 1f       	adc	r25, r26
 894:	a1 1d       	adc	r26, r1
 896:	68 0f       	add	r22, r24
 898:	79 1f       	adc	r23, r25
 89a:	8a 1f       	adc	r24, r26
 89c:	91 1d       	adc	r25, r1
 89e:	a1 1d       	adc	r26, r1
 8a0:	6a 0f       	add	r22, r26
 8a2:	71 1d       	adc	r23, r1
 8a4:	81 1d       	adc	r24, r1
 8a6:	91 1d       	adc	r25, r1
 8a8:	a1 1d       	adc	r26, r1
 8aa:	20 d0       	rcall	.+64     	; 0x8ec <__ultoa_invert+0x84>
 8ac:	09 f4       	brne	.+2      	; 0x8b0 <__ultoa_invert+0x48>
 8ae:	68 94       	set
 8b0:	3f 91       	pop	r19
 8b2:	2a e0       	ldi	r18, 0x0A	; 10
 8b4:	26 9f       	mul	r18, r22
 8b6:	11 24       	eor	r1, r1
 8b8:	30 19       	sub	r19, r0
 8ba:	30 5d       	subi	r19, 0xD0	; 208
 8bc:	31 93       	st	Z+, r19
 8be:	de f6       	brtc	.-74     	; 0x876 <__ultoa_invert+0xe>
 8c0:	cf 01       	movw	r24, r30
 8c2:	08 95       	ret
 8c4:	46 2f       	mov	r20, r22
 8c6:	47 70       	andi	r20, 0x07	; 7
 8c8:	40 5d       	subi	r20, 0xD0	; 208
 8ca:	41 93       	st	Z+, r20
 8cc:	b3 e0       	ldi	r27, 0x03	; 3
 8ce:	0f d0       	rcall	.+30     	; 0x8ee <__ultoa_invert+0x86>
 8d0:	c9 f7       	brne	.-14     	; 0x8c4 <__ultoa_invert+0x5c>
 8d2:	f6 cf       	rjmp	.-20     	; 0x8c0 <__ultoa_invert+0x58>
 8d4:	46 2f       	mov	r20, r22
 8d6:	4f 70       	andi	r20, 0x0F	; 15
 8d8:	40 5d       	subi	r20, 0xD0	; 208
 8da:	4a 33       	cpi	r20, 0x3A	; 58
 8dc:	18 f0       	brcs	.+6      	; 0x8e4 <__ultoa_invert+0x7c>
 8de:	49 5d       	subi	r20, 0xD9	; 217
 8e0:	31 fd       	sbrc	r19, 1
 8e2:	40 52       	subi	r20, 0x20	; 32
 8e4:	41 93       	st	Z+, r20
 8e6:	02 d0       	rcall	.+4      	; 0x8ec <__ultoa_invert+0x84>
 8e8:	a9 f7       	brne	.-22     	; 0x8d4 <__ultoa_invert+0x6c>
 8ea:	ea cf       	rjmp	.-44     	; 0x8c0 <__ultoa_invert+0x58>
 8ec:	b4 e0       	ldi	r27, 0x04	; 4
 8ee:	a6 95       	lsr	r26
 8f0:	97 95       	ror	r25
 8f2:	87 95       	ror	r24
 8f4:	77 95       	ror	r23
 8f6:	67 95       	ror	r22
 8f8:	ba 95       	dec	r27
 8fa:	c9 f7       	brne	.-14     	; 0x8ee <__ultoa_invert+0x86>
 8fc:	00 97       	sbiw	r24, 0x00	; 0
 8fe:	61 05       	cpc	r22, r1
 900:	71 05       	cpc	r23, r1
 902:	08 95       	ret
 904:	9b 01       	movw	r18, r22
 906:	ac 01       	movw	r20, r24
 908:	0a 2e       	mov	r0, r26
 90a:	06 94       	lsr	r0
 90c:	57 95       	ror	r21
 90e:	47 95       	ror	r20
 910:	37 95       	ror	r19
 912:	27 95       	ror	r18
 914:	ba 95       	dec	r27
 916:	c9 f7       	brne	.-14     	; 0x90a <__ultoa_invert+0xa2>
 918:	62 0f       	add	r22, r18
 91a:	73 1f       	adc	r23, r19
 91c:	84 1f       	adc	r24, r20
 91e:	95 1f       	adc	r25, r21
 920:	a0 1d       	adc	r26, r0
 922:	08 95       	ret

00000924 <_exit>:
 924:	f8 94       	cli

00000926 <__stop_program>:
 926:	ff cf       	rjmp	.-2      	; 0x926 <__stop_program>
